([illegal_fishing_lvl1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label illegal_fishing_lvl1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name illegal_fishing_lvl1)
   (rules [rule8] [rule2] [rule1])
   (defeasible-stratum 0))

([illegal_fishing_lvl2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label illegal_fishing_lvl2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name illegal_fishing_lvl2)
   (rules [rule10] [rule9] [rule7] [rule6] [rule5] [rule4] [rule3])
   (defeasible-stratum 0))

([illegal_fishing_confiscation] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label illegal_fishing_confiscation)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name illegal_fishing_confiscation)
   (rules [rule12] [rule11])
   (defeasible-stratum -1))

([to_pay_min] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label to_pay_min)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name to_pay_min)
   (rules [pen1] [pen1])
   (defeasible-stratum 0))

([to_pay_max] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label to_pay_max)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name to_pay_max)
   (rules [pen2] [pen2])
   (defeasible-stratum 0))

([max_imprisonment_months] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_months)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_months)
   (rules [pen3] [pen3])
   (defeasible-stratum 0))

([max_imprisonment_years] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:fish)
   (lc:have)
   (lc:catches_in)
   (lc:catches_during)
   (lc:uses)
   (lc:destroys_fish)
   (lc:causes)
   (lc:fish_number)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_years)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_years)
   (rules [pen4] [pen4] [pen4] [pen4] [pen4] [pen4] [pen4])
   (defeasible-stratum 0))

