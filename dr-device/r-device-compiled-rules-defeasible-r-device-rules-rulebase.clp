( defrule rule2-deductive-gen353 ( declare ( salience ( calc-salience illegal_fishing_lvl1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen36 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen37 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen39 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl1 ( defendant ?Defendant ) ) )
( defrule rule4-deductive-gen355 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen78 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen79 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen80 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ) ( object ( name ?gen81 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen82 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule5-deductive-gen356 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen100 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen101 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ) ( object ( name ?gen102 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule6-deductive-gen357 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen120 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen121 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen122 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen123 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ) ( object ( name ?gen124 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule7-deductive-gen358 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen141 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen142 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen143 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen144 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ) ( object ( name ?gen145 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule8-deductive-gen359 ( declare ( salience ( calc-salience illegal_fishing_lvl1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen162 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl1 ( defendant ?Defendant ) ) )
( defrule rule9-deductive-gen360 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen171 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen172 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen173 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen174 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen175 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ) ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule10-deductive-gen361 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen195 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen196 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen197 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen198 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen199 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ) ( test ( > ?fish_number 5 ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule12-deductive-gen363 ( declare ( salience ( calc-salience illegal_fishing_confiscation ) ) ) ( run-deductive-rules ) ( object ( name ?gen226 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_confiscation ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_confiscation ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_confiscation ( defendant ?Defendant ) ) )
( defrule pen4-defeasibly-dot-gen368 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen344 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen351 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen350 & : ( >= ?gen350 1 ) ) ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen346 & : ( not ( member$ pen4 $?gen346 ) ) ) ) ) )  ( not ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen344 ) ) => ( message-modify-instance ?gen344 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen370 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen351 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen350 & : ( >= ?gen350 1 ) ) ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen346 & : ( not ( member$ pen4 $?gen346 ) ) ) ) ( test ( eq ( class ?gen344 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen351 ) ) ) ( test ( instance-existp ?gen344 ) ) => ( message-modify-instance ?gen344 ( positive 1 ) ( positive-derivator pen4 ?gen351 ) ) )
( defrule pen4-overruled-dot-gen372 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen347 ) ( negative-overruled $?gen348 & : ( subseq-pos ( create$ pen4-overruled $?gen347 $$$ $?gen348 ) ) ) ) ( test ( eq ( class ?gen344 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen351 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen350 & : ( >= ?gen350 1 ) ) ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen346 & : ( not ( member$ pen4 $?gen346 ) ) ) ) ) ) ( test ( neq $?gen347 (create$) ) ) ( not ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen349 & : ( eq $?gen349 ( delete-member$ $?gen348 ( create$ pen4-overruled $?gen347 ) ) ) ) ) ) ( test ( instance-existp ?gen344 ) ) => ( bind $?gen349 ( delete-member$ $?gen348 ( create$ pen4-overruled $?gen347 ) ) ) ( message-modify-instance ?gen344 ( negative-overruled $?gen349 ) ) )
( defrule pen4-overruled-gen374 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen351 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen350 & : ( >= ?gen350 1 ) ) ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen347 ) ( negative-overruled $?gen348 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen347 $$$ $?gen348 ) ) ) ) ( positive-defeated $?gen346 & : ( not ( member$ pen4 $?gen346 ) ) ) ) ( test ( eq ( class ?gen344 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen347 (create$) ) ) ) ( not ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen349 & : ( eq $?gen349 ( create$ pen4-overruled $?gen347 $?gen348 ) ) ) ) ) ( test ( instance-existp ?gen344 ) ) => ( bind $?gen349 ( create$ pen4-overruled $?gen347 $?gen348 ) ) ( message-modify-instance ?gen344 ( negative-overruled $?gen349 ) ) )
( defrule pen4-support-gen376 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen343 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen346 & : ( not ( subseq-pos ( create$ pen4 ?gen343 $$$ $?gen346 ) ) ) ) ) ( test ( eq ( class ?gen344 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen344 ) ( is-a max_imprisonment_years ) ( positive-support $?gen349 & : ( eq $?gen349 ( create$ pen4 ?gen343 $?gen346 ) ) ) ) ) ( test ( instance-existp ?gen344 ) ) => ( bind $?gen349 ( create$ pen4 ?gen343 $?gen346 ) ) ( message-modify-instance ?gen344 ( positive-support $?gen349 ) ) )
( defrule pen4-defeasibly-dot-gen378 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen335 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen342 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen341 & : ( >= ?gen341 1 ) ) ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen337 & : ( not ( member$ pen4 $?gen337 ) ) ) ) ) )  ( not ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen335 ) ) => ( message-modify-instance ?gen335 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen380 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen342 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen341 & : ( >= ?gen341 1 ) ) ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen337 & : ( not ( member$ pen4 $?gen337 ) ) ) ) ( test ( eq ( class ?gen335 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen342 ) ) ) ( test ( instance-existp ?gen335 ) ) => ( message-modify-instance ?gen335 ( positive 1 ) ( positive-derivator pen4 ?gen342 ) ) )
( defrule pen4-overruled-dot-gen382 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen338 ) ( negative-overruled $?gen339 & : ( subseq-pos ( create$ pen4-overruled $?gen338 $$$ $?gen339 ) ) ) ) ( test ( eq ( class ?gen335 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen342 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen341 & : ( >= ?gen341 1 ) ) ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen337 & : ( not ( member$ pen4 $?gen337 ) ) ) ) ) ) ( test ( neq $?gen338 (create$) ) ) ( not ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen340 & : ( eq $?gen340 ( delete-member$ $?gen339 ( create$ pen4-overruled $?gen338 ) ) ) ) ) ) ( test ( instance-existp ?gen335 ) ) => ( bind $?gen340 ( delete-member$ $?gen339 ( create$ pen4-overruled $?gen338 ) ) ) ( message-modify-instance ?gen335 ( negative-overruled $?gen340 ) ) )
( defrule pen4-overruled-gen384 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen342 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen341 & : ( >= ?gen341 1 ) ) ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen338 ) ( negative-overruled $?gen339 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen338 $$$ $?gen339 ) ) ) ) ( positive-defeated $?gen337 & : ( not ( member$ pen4 $?gen337 ) ) ) ) ( test ( eq ( class ?gen335 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen338 (create$) ) ) ) ( not ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen340 & : ( eq $?gen340 ( create$ pen4-overruled $?gen338 $?gen339 ) ) ) ) ) ( test ( instance-existp ?gen335 ) ) => ( bind $?gen340 ( create$ pen4-overruled $?gen338 $?gen339 ) ) ( message-modify-instance ?gen335 ( negative-overruled $?gen340 ) ) )
( defrule pen4-support-gen386 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen334 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen337 & : ( not ( subseq-pos ( create$ pen4 ?gen334 $$$ $?gen337 ) ) ) ) ) ( test ( eq ( class ?gen335 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen335 ) ( is-a max_imprisonment_years ) ( positive-support $?gen340 & : ( eq $?gen340 ( create$ pen4 ?gen334 $?gen337 ) ) ) ) ) ( test ( instance-existp ?gen335 ) ) => ( bind $?gen340 ( create$ pen4 ?gen334 $?gen337 ) ) ( message-modify-instance ?gen335 ( positive-support $?gen340 ) ) )
( defrule pen4-defeasibly-dot-gen388 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen326 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen333 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen332 & : ( >= ?gen332 1 ) ) ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen328 & : ( not ( member$ pen4 $?gen328 ) ) ) ) ) )  ( not ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen326 ) ) => ( message-modify-instance ?gen326 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen390 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen333 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen332 & : ( >= ?gen332 1 ) ) ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen328 & : ( not ( member$ pen4 $?gen328 ) ) ) ) ( test ( eq ( class ?gen326 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen333 ) ) ) ( test ( instance-existp ?gen326 ) ) => ( message-modify-instance ?gen326 ( positive 1 ) ( positive-derivator pen4 ?gen333 ) ) )
( defrule pen4-overruled-dot-gen392 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen329 ) ( negative-overruled $?gen330 & : ( subseq-pos ( create$ pen4-overruled $?gen329 $$$ $?gen330 ) ) ) ) ( test ( eq ( class ?gen326 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen333 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen332 & : ( >= ?gen332 1 ) ) ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen328 & : ( not ( member$ pen4 $?gen328 ) ) ) ) ) ) ( test ( neq $?gen329 (create$) ) ) ( not ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen331 & : ( eq $?gen331 ( delete-member$ $?gen330 ( create$ pen4-overruled $?gen329 ) ) ) ) ) ) ( test ( instance-existp ?gen326 ) ) => ( bind $?gen331 ( delete-member$ $?gen330 ( create$ pen4-overruled $?gen329 ) ) ) ( message-modify-instance ?gen326 ( negative-overruled $?gen331 ) ) )
( defrule pen4-overruled-gen394 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen333 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen332 & : ( >= ?gen332 1 ) ) ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen329 ) ( negative-overruled $?gen330 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen329 $$$ $?gen330 ) ) ) ) ( positive-defeated $?gen328 & : ( not ( member$ pen4 $?gen328 ) ) ) ) ( test ( eq ( class ?gen326 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen329 (create$) ) ) ) ( not ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen331 & : ( eq $?gen331 ( create$ pen4-overruled $?gen329 $?gen330 ) ) ) ) ) ( test ( instance-existp ?gen326 ) ) => ( bind $?gen331 ( create$ pen4-overruled $?gen329 $?gen330 ) ) ( message-modify-instance ?gen326 ( negative-overruled $?gen331 ) ) )
( defrule pen4-support-gen396 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen325 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen328 & : ( not ( subseq-pos ( create$ pen4 ?gen325 $$$ $?gen328 ) ) ) ) ) ( test ( eq ( class ?gen326 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen326 ) ( is-a max_imprisonment_years ) ( positive-support $?gen331 & : ( eq $?gen331 ( create$ pen4 ?gen325 $?gen328 ) ) ) ) ) ( test ( instance-existp ?gen326 ) ) => ( bind $?gen331 ( create$ pen4 ?gen325 $?gen328 ) ) ( message-modify-instance ?gen326 ( positive-support $?gen331 ) ) )
( defrule pen4-defeasibly-dot-gen398 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen317 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen324 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen323 & : ( >= ?gen323 1 ) ) ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen319 & : ( not ( member$ pen4 $?gen319 ) ) ) ) ) )  ( not ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen317 ) ) => ( message-modify-instance ?gen317 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen400 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen324 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen323 & : ( >= ?gen323 1 ) ) ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen319 & : ( not ( member$ pen4 $?gen319 ) ) ) ) ( test ( eq ( class ?gen317 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen324 ) ) ) ( test ( instance-existp ?gen317 ) ) => ( message-modify-instance ?gen317 ( positive 1 ) ( positive-derivator pen4 ?gen324 ) ) )
( defrule pen4-overruled-dot-gen402 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen320 ) ( negative-overruled $?gen321 & : ( subseq-pos ( create$ pen4-overruled $?gen320 $$$ $?gen321 ) ) ) ) ( test ( eq ( class ?gen317 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen324 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen323 & : ( >= ?gen323 1 ) ) ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen319 & : ( not ( member$ pen4 $?gen319 ) ) ) ) ) ) ( test ( neq $?gen320 (create$) ) ) ( not ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen322 & : ( eq $?gen322 ( delete-member$ $?gen321 ( create$ pen4-overruled $?gen320 ) ) ) ) ) ) ( test ( instance-existp ?gen317 ) ) => ( bind $?gen322 ( delete-member$ $?gen321 ( create$ pen4-overruled $?gen320 ) ) ) ( message-modify-instance ?gen317 ( negative-overruled $?gen322 ) ) )
( defrule pen4-overruled-gen404 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen324 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen323 & : ( >= ?gen323 1 ) ) ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen320 ) ( negative-overruled $?gen321 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen320 $$$ $?gen321 ) ) ) ) ( positive-defeated $?gen319 & : ( not ( member$ pen4 $?gen319 ) ) ) ) ( test ( eq ( class ?gen317 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen320 (create$) ) ) ) ( not ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen322 & : ( eq $?gen322 ( create$ pen4-overruled $?gen320 $?gen321 ) ) ) ) ) ( test ( instance-existp ?gen317 ) ) => ( bind $?gen322 ( create$ pen4-overruled $?gen320 $?gen321 ) ) ( message-modify-instance ?gen317 ( negative-overruled $?gen322 ) ) )
( defrule pen4-support-gen406 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen316 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen319 & : ( not ( subseq-pos ( create$ pen4 ?gen316 $$$ $?gen319 ) ) ) ) ) ( test ( eq ( class ?gen317 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen317 ) ( is-a max_imprisonment_years ) ( positive-support $?gen322 & : ( eq $?gen322 ( create$ pen4 ?gen316 $?gen319 ) ) ) ) ) ( test ( instance-existp ?gen317 ) ) => ( bind $?gen322 ( create$ pen4 ?gen316 $?gen319 ) ) ( message-modify-instance ?gen317 ( positive-support $?gen322 ) ) )
( defrule pen4-defeasibly-dot-gen408 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen308 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen315 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen314 & : ( >= ?gen314 1 ) ) ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen310 & : ( not ( member$ pen4 $?gen310 ) ) ) ) ) )  ( not ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen308 ) ) => ( message-modify-instance ?gen308 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen410 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen315 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen314 & : ( >= ?gen314 1 ) ) ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen310 & : ( not ( member$ pen4 $?gen310 ) ) ) ) ( test ( eq ( class ?gen308 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen315 ) ) ) ( test ( instance-existp ?gen308 ) ) => ( message-modify-instance ?gen308 ( positive 1 ) ( positive-derivator pen4 ?gen315 ) ) )
( defrule pen4-overruled-dot-gen412 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen311 ) ( negative-overruled $?gen312 & : ( subseq-pos ( create$ pen4-overruled $?gen311 $$$ $?gen312 ) ) ) ) ( test ( eq ( class ?gen308 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen315 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen314 & : ( >= ?gen314 1 ) ) ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen310 & : ( not ( member$ pen4 $?gen310 ) ) ) ) ) ) ( test ( neq $?gen311 (create$) ) ) ( not ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen313 & : ( eq $?gen313 ( delete-member$ $?gen312 ( create$ pen4-overruled $?gen311 ) ) ) ) ) ) ( test ( instance-existp ?gen308 ) ) => ( bind $?gen313 ( delete-member$ $?gen312 ( create$ pen4-overruled $?gen311 ) ) ) ( message-modify-instance ?gen308 ( negative-overruled $?gen313 ) ) )
( defrule pen4-overruled-gen414 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen315 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen314 & : ( >= ?gen314 1 ) ) ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen311 ) ( negative-overruled $?gen312 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen311 $$$ $?gen312 ) ) ) ) ( positive-defeated $?gen310 & : ( not ( member$ pen4 $?gen310 ) ) ) ) ( test ( eq ( class ?gen308 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen311 (create$) ) ) ) ( not ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen313 & : ( eq $?gen313 ( create$ pen4-overruled $?gen311 $?gen312 ) ) ) ) ) ( test ( instance-existp ?gen308 ) ) => ( bind $?gen313 ( create$ pen4-overruled $?gen311 $?gen312 ) ) ( message-modify-instance ?gen308 ( negative-overruled $?gen313 ) ) )
( defrule pen4-support-gen416 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen307 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen310 & : ( not ( subseq-pos ( create$ pen4 ?gen307 $$$ $?gen310 ) ) ) ) ) ( test ( eq ( class ?gen308 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen308 ) ( is-a max_imprisonment_years ) ( positive-support $?gen313 & : ( eq $?gen313 ( create$ pen4 ?gen307 $?gen310 ) ) ) ) ) ( test ( instance-existp ?gen308 ) ) => ( bind $?gen313 ( create$ pen4 ?gen307 $?gen310 ) ) ( message-modify-instance ?gen308 ( positive-support $?gen313 ) ) )
( defrule pen4-defeasibly-dot-gen418 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen299 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen306 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen305 & : ( >= ?gen305 1 ) ) ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen301 & : ( not ( member$ pen4 $?gen301 ) ) ) ) ) )  ( not ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen299 ) ) => ( message-modify-instance ?gen299 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen420 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen306 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen305 & : ( >= ?gen305 1 ) ) ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen301 & : ( not ( member$ pen4 $?gen301 ) ) ) ) ( test ( eq ( class ?gen299 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen306 ) ) ) ( test ( instance-existp ?gen299 ) ) => ( message-modify-instance ?gen299 ( positive 1 ) ( positive-derivator pen4 ?gen306 ) ) )
( defrule pen4-overruled-dot-gen422 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen302 ) ( negative-overruled $?gen303 & : ( subseq-pos ( create$ pen4-overruled $?gen302 $$$ $?gen303 ) ) ) ) ( test ( eq ( class ?gen299 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen306 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen305 & : ( >= ?gen305 1 ) ) ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen301 & : ( not ( member$ pen4 $?gen301 ) ) ) ) ) ) ( test ( neq $?gen302 (create$) ) ) ( not ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen304 & : ( eq $?gen304 ( delete-member$ $?gen303 ( create$ pen4-overruled $?gen302 ) ) ) ) ) ) ( test ( instance-existp ?gen299 ) ) => ( bind $?gen304 ( delete-member$ $?gen303 ( create$ pen4-overruled $?gen302 ) ) ) ( message-modify-instance ?gen299 ( negative-overruled $?gen304 ) ) )
( defrule pen4-overruled-gen424 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen306 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen305 & : ( >= ?gen305 1 ) ) ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen302 ) ( negative-overruled $?gen303 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen302 $$$ $?gen303 ) ) ) ) ( positive-defeated $?gen301 & : ( not ( member$ pen4 $?gen301 ) ) ) ) ( test ( eq ( class ?gen299 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen302 (create$) ) ) ) ( not ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen304 & : ( eq $?gen304 ( create$ pen4-overruled $?gen302 $?gen303 ) ) ) ) ) ( test ( instance-existp ?gen299 ) ) => ( bind $?gen304 ( create$ pen4-overruled $?gen302 $?gen303 ) ) ( message-modify-instance ?gen299 ( negative-overruled $?gen304 ) ) )
( defrule pen4-support-gen426 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen298 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen301 & : ( not ( subseq-pos ( create$ pen4 ?gen298 $$$ $?gen301 ) ) ) ) ) ( test ( eq ( class ?gen299 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen299 ) ( is-a max_imprisonment_years ) ( positive-support $?gen304 & : ( eq $?gen304 ( create$ pen4 ?gen298 $?gen301 ) ) ) ) ) ( test ( instance-existp ?gen299 ) ) => ( bind $?gen304 ( create$ pen4 ?gen298 $?gen301 ) ) ( message-modify-instance ?gen299 ( positive-support $?gen304 ) ) )
( defrule pen4-defeasibly-dot-gen428 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen290 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen297 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen296 & : ( >= ?gen296 1 ) ) ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( negative ~ 2 ) ( positive-overruled $?gen292 & : ( not ( member$ pen4 $?gen292 ) ) ) ) ) )  ( not ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( positive 0 ) ) ) ( test ( instance-existp ?gen290 ) ) => ( message-modify-instance ?gen290 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen430 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen297 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen296 & : ( >= ?gen296 1 ) ) ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen292 & : ( not ( member$ pen4 $?gen292 ) ) ) ) ( test ( eq ( class ?gen290 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( positive 1 ) ( positive-derivator pen4 ?gen297 ) ) ) ( test ( instance-existp ?gen290 ) ) => ( message-modify-instance ?gen290 ( positive 1 ) ( positive-derivator pen4 ?gen297 ) ) )
( defrule pen4-overruled-dot-gen432 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen293 ) ( negative-overruled $?gen294 & : ( subseq-pos ( create$ pen4-overruled $?gen293 $$$ $?gen294 ) ) ) ) ( test ( eq ( class ?gen290 ) max_imprisonment_years ) ) ( not ( and ( object ( name ?gen297 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen296 & : ( >= ?gen296 1 ) ) ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( positive-defeated $?gen292 & : ( not ( member$ pen4 $?gen292 ) ) ) ) ) ) ( test ( neq $?gen293 (create$) ) ) ( not ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen295 & : ( eq $?gen295 ( delete-member$ $?gen294 ( create$ pen4-overruled $?gen293 ) ) ) ) ) ) ( test ( instance-existp ?gen290 ) ) => ( bind $?gen295 ( delete-member$ $?gen294 ( create$ pen4-overruled $?gen293 ) ) ) ( message-modify-instance ?gen290 ( negative-overruled $?gen295 ) ) )
( defrule pen4-overruled-gen434 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen297 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen296 & : ( >= ?gen296 1 ) ) ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( value 3 ) ( negative-support $?gen293 ) ( negative-overruled $?gen294 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen293 $$$ $?gen294 ) ) ) ) ( positive-defeated $?gen292 & : ( not ( member$ pen4 $?gen292 ) ) ) ) ( test ( eq ( class ?gen290 ) max_imprisonment_years ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen293 (create$) ) ) ) ( not ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( negative-overruled $?gen295 & : ( eq $?gen295 ( create$ pen4-overruled $?gen293 $?gen294 ) ) ) ) ) ( test ( instance-existp ?gen290 ) ) => ( bind $?gen295 ( create$ pen4-overruled $?gen293 $?gen294 ) ) ( message-modify-instance ?gen290 ( negative-overruled $?gen295 ) ) )
( defrule pen4-support-gen436 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen289 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( value 3 ) ( positive-support $?gen292 & : ( not ( subseq-pos ( create$ pen4 ?gen289 $$$ $?gen292 ) ) ) ) ) ( test ( eq ( class ?gen290 ) max_imprisonment_years ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen290 ) ( is-a max_imprisonment_years ) ( positive-support $?gen295 & : ( eq $?gen295 ( create$ pen4 ?gen289 $?gen292 ) ) ) ) ) ( test ( instance-existp ?gen290 ) ) => ( bind $?gen295 ( create$ pen4 ?gen289 $?gen292 ) ) ( message-modify-instance ?gen290 ( positive-support $?gen295 ) ) )
( defrule pen3-defeasibly-dot-gen438 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen281 ) max_imprisonment_months ) ) ( not ( and ( object ( name ?gen288 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen287 & : ( >= ?gen287 1 ) ) ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( negative ~ 2 ) ( positive-overruled $?gen283 & : ( not ( member$ pen3 $?gen283 ) ) ) ) ) )  ( not ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( positive 0 ) ) ) ( test ( instance-existp ?gen281 ) ) => ( message-modify-instance ?gen281 ( positive 0 ) ) )
( defrule pen3-defeasibly-gen440 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen288 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen287 & : ( >= ?gen287 1 ) ) ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen283 & : ( not ( member$ pen3 $?gen283 ) ) ) ) ( test ( eq ( class ?gen281 ) max_imprisonment_months ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( positive 1 ) ( positive-derivator pen3 ?gen288 ) ) ) ( test ( instance-existp ?gen281 ) ) => ( message-modify-instance ?gen281 ( positive 1 ) ( positive-derivator pen3 ?gen288 ) ) )
( defrule pen3-overruled-dot-gen442 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( value 6 ) ( negative-support $?gen284 ) ( negative-overruled $?gen285 & : ( subseq-pos ( create$ pen3-overruled $?gen284 $$$ $?gen285 ) ) ) ) ( test ( eq ( class ?gen281 ) max_imprisonment_months ) ) ( not ( and ( object ( name ?gen288 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen287 & : ( >= ?gen287 1 ) ) ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( positive-defeated $?gen283 & : ( not ( member$ pen3 $?gen283 ) ) ) ) ) ) ( test ( neq $?gen284 (create$) ) ) ( not ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( negative-overruled $?gen286 & : ( eq $?gen286 ( delete-member$ $?gen285 ( create$ pen3-overruled $?gen284 ) ) ) ) ) ) ( test ( instance-existp ?gen281 ) ) => ( bind $?gen286 ( delete-member$ $?gen285 ( create$ pen3-overruled $?gen284 ) ) ) ( message-modify-instance ?gen281 ( negative-overruled $?gen286 ) ) )
( defrule pen3-overruled-gen444 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen288 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen287 & : ( >= ?gen287 1 ) ) ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( value 6 ) ( negative-support $?gen284 ) ( negative-overruled $?gen285 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen284 $$$ $?gen285 ) ) ) ) ( positive-defeated $?gen283 & : ( not ( member$ pen3 $?gen283 ) ) ) ) ( test ( eq ( class ?gen281 ) max_imprisonment_months ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen284 (create$) ) ) ) ( not ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( negative-overruled $?gen286 & : ( eq $?gen286 ( create$ pen3-overruled $?gen284 $?gen285 ) ) ) ) ) ( test ( instance-existp ?gen281 ) ) => ( bind $?gen286 ( create$ pen3-overruled $?gen284 $?gen285 ) ) ( message-modify-instance ?gen281 ( negative-overruled $?gen286 ) ) )
( defrule pen3-support-gen446 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen280 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive-support $?gen283 & : ( not ( subseq-pos ( create$ pen3 ?gen280 $$$ $?gen283 ) ) ) ) ) ( test ( eq ( class ?gen281 ) max_imprisonment_months ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen281 ) ( is-a max_imprisonment_months ) ( positive-support $?gen286 & : ( eq $?gen286 ( create$ pen3 ?gen280 $?gen283 ) ) ) ) ) ( test ( instance-existp ?gen281 ) ) => ( bind $?gen286 ( create$ pen3 ?gen280 $?gen283 ) ) ( message-modify-instance ?gen281 ( positive-support $?gen286 ) ) )
( defrule pen2-defeasibly-dot-gen448 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( value 2000 ) ( positive 1 ) ( positive-derivator pen2 $? ) ) ( test ( eq ( class ?gen272 ) to_pay_max ) ) ( not ( and ( object ( name ?gen279 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen278 & : ( >= ?gen278 1 ) ) ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen274 & : ( not ( member$ pen2 $?gen274 ) ) ) ) ) )  ( not ( object ( name ?gen272 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen272 ) ) => ( message-modify-instance ?gen272 ( positive 0 ) ) )
( defrule pen2-defeasibly-gen450 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen279 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen278 & : ( >= ?gen278 1 ) ) ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( value 2000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen274 & : ( not ( member$ pen2 $?gen274 ) ) ) ) ( test ( eq ( class ?gen272 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen272 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen2 ?gen279 ) ) ) ( test ( instance-existp ?gen272 ) ) => ( message-modify-instance ?gen272 ( positive 1 ) ( positive-derivator pen2 ?gen279 ) ) )
( defrule pen2-overruled-dot-gen452 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( value 2000 ) ( negative-support $?gen275 ) ( negative-overruled $?gen276 & : ( subseq-pos ( create$ pen2-overruled $?gen275 $$$ $?gen276 ) ) ) ) ( test ( eq ( class ?gen272 ) to_pay_max ) ) ( not ( and ( object ( name ?gen279 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen278 & : ( >= ?gen278 1 ) ) ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( positive-defeated $?gen274 & : ( not ( member$ pen2 $?gen274 ) ) ) ) ) ) ( test ( neq $?gen275 (create$) ) ) ( not ( object ( name ?gen272 ) ( is-a to_pay_max ) ( negative-overruled $?gen277 & : ( eq $?gen277 ( delete-member$ $?gen276 ( create$ pen2-overruled $?gen275 ) ) ) ) ) ) ( test ( instance-existp ?gen272 ) ) => ( bind $?gen277 ( delete-member$ $?gen276 ( create$ pen2-overruled $?gen275 ) ) ) ( message-modify-instance ?gen272 ( negative-overruled $?gen277 ) ) )
( defrule pen2-overruled-gen454 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen279 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen278 & : ( >= ?gen278 1 ) ) ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( value 2000 ) ( negative-support $?gen275 ) ( negative-overruled $?gen276 & : ( not ( subseq-pos ( create$ pen2-overruled $?gen275 $$$ $?gen276 ) ) ) ) ( positive-defeated $?gen274 & : ( not ( member$ pen2 $?gen274 ) ) ) ) ( test ( eq ( class ?gen272 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen275 (create$) ) ) ) ( not ( object ( name ?gen272 ) ( is-a to_pay_max ) ( negative-overruled $?gen277 & : ( eq $?gen277 ( create$ pen2-overruled $?gen275 $?gen276 ) ) ) ) ) ( test ( instance-existp ?gen272 ) ) => ( bind $?gen277 ( create$ pen2-overruled $?gen275 $?gen276 ) ) ( message-modify-instance ?gen272 ( negative-overruled $?gen277 ) ) )
( defrule pen2-support-gen456 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen271 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen272 ) ( is-a to_pay_max ) ( value 2000 ) ( positive-support $?gen274 & : ( not ( subseq-pos ( create$ pen2 ?gen271 $$$ $?gen274 ) ) ) ) ) ( test ( eq ( class ?gen272 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen272 ) ( is-a to_pay_max ) ( positive-support $?gen277 & : ( eq $?gen277 ( create$ pen2 ?gen271 $?gen274 ) ) ) ) ) ( test ( instance-existp ?gen272 ) ) => ( bind $?gen277 ( create$ pen2 ?gen271 $?gen274 ) ) ( message-modify-instance ?gen272 ( positive-support $?gen277 ) ) )
( defrule pen1-defeasibly-dot-gen458 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( value 500 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen263 ) to_pay_min ) ) ( not ( and ( object ( name ?gen270 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen269 & : ( >= ?gen269 1 ) ) ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen265 & : ( not ( member$ pen1 $?gen265 ) ) ) ) ) )  ( not ( object ( name ?gen263 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen263 ) ) => ( message-modify-instance ?gen263 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen460 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen270 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen269 & : ( >= ?gen269 1 ) ) ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen265 & : ( not ( member$ pen1 $?gen265 ) ) ) ) ( test ( eq ( class ?gen263 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen263 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen1 ?gen270 ) ) ) ( test ( instance-existp ?gen263 ) ) => ( message-modify-instance ?gen263 ( positive 1 ) ( positive-derivator pen1 ?gen270 ) ) )
( defrule pen1-overruled-dot-gen462 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( value 500 ) ( negative-support $?gen266 ) ( negative-overruled $?gen267 & : ( subseq-pos ( create$ pen1-overruled $?gen266 $$$ $?gen267 ) ) ) ) ( test ( eq ( class ?gen263 ) to_pay_min ) ) ( not ( and ( object ( name ?gen270 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen269 & : ( >= ?gen269 1 ) ) ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( positive-defeated $?gen265 & : ( not ( member$ pen1 $?gen265 ) ) ) ) ) ) ( test ( neq $?gen266 (create$) ) ) ( not ( object ( name ?gen263 ) ( is-a to_pay_min ) ( negative-overruled $?gen268 & : ( eq $?gen268 ( delete-member$ $?gen267 ( create$ pen1-overruled $?gen266 ) ) ) ) ) ) ( test ( instance-existp ?gen263 ) ) => ( bind $?gen268 ( delete-member$ $?gen267 ( create$ pen1-overruled $?gen266 ) ) ) ( message-modify-instance ?gen263 ( negative-overruled $?gen268 ) ) )
( defrule pen1-overruled-gen464 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen270 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen269 & : ( >= ?gen269 1 ) ) ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( value 500 ) ( negative-support $?gen266 ) ( negative-overruled $?gen267 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen266 $$$ $?gen267 ) ) ) ) ( positive-defeated $?gen265 & : ( not ( member$ pen1 $?gen265 ) ) ) ) ( test ( eq ( class ?gen263 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen266 (create$) ) ) ) ( not ( object ( name ?gen263 ) ( is-a to_pay_min ) ( negative-overruled $?gen268 & : ( eq $?gen268 ( create$ pen1-overruled $?gen266 $?gen267 ) ) ) ) ) ( test ( instance-existp ?gen263 ) ) => ( bind $?gen268 ( create$ pen1-overruled $?gen266 $?gen267 ) ) ( message-modify-instance ?gen263 ( negative-overruled $?gen268 ) ) )
( defrule pen1-support-gen466 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen262 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen263 ) ( is-a to_pay_min ) ( value 500 ) ( positive-support $?gen265 & : ( not ( subseq-pos ( create$ pen1 ?gen262 $$$ $?gen265 ) ) ) ) ) ( test ( eq ( class ?gen263 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen263 ) ( is-a to_pay_min ) ( positive-support $?gen268 & : ( eq $?gen268 ( create$ pen1 ?gen262 $?gen265 ) ) ) ) ) ( test ( instance-existp ?gen263 ) ) => ( bind $?gen268 ( create$ pen1 ?gen262 $?gen265 ) ) ( message-modify-instance ?gen263 ( positive-support $?gen268 ) ) )
( defrule pen3-defeasibly-dot-gen468 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen254 ) max_imprisonment_months ) ) ( not ( and ( object ( name ?gen261 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen260 & : ( >= ?gen260 1 ) ) ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( negative ~ 2 ) ( positive-overruled $?gen256 & : ( not ( member$ pen3 $?gen256 ) ) ) ) ) )  ( not ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( positive 0 ) ) ) ( test ( instance-existp ?gen254 ) ) => ( message-modify-instance ?gen254 ( positive 0 ) ) )
( defrule pen3-defeasibly-gen470 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen261 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen260 & : ( >= ?gen260 1 ) ) ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen256 & : ( not ( member$ pen3 $?gen256 ) ) ) ) ( test ( eq ( class ?gen254 ) max_imprisonment_months ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( positive 1 ) ( positive-derivator pen3 ?gen261 ) ) ) ( test ( instance-existp ?gen254 ) ) => ( message-modify-instance ?gen254 ( positive 1 ) ( positive-derivator pen3 ?gen261 ) ) )
( defrule pen3-overruled-dot-gen472 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( value 6 ) ( negative-support $?gen257 ) ( negative-overruled $?gen258 & : ( subseq-pos ( create$ pen3-overruled $?gen257 $$$ $?gen258 ) ) ) ) ( test ( eq ( class ?gen254 ) max_imprisonment_months ) ) ( not ( and ( object ( name ?gen261 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen260 & : ( >= ?gen260 1 ) ) ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( positive-defeated $?gen256 & : ( not ( member$ pen3 $?gen256 ) ) ) ) ) ) ( test ( neq $?gen257 (create$) ) ) ( not ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( negative-overruled $?gen259 & : ( eq $?gen259 ( delete-member$ $?gen258 ( create$ pen3-overruled $?gen257 ) ) ) ) ) ) ( test ( instance-existp ?gen254 ) ) => ( bind $?gen259 ( delete-member$ $?gen258 ( create$ pen3-overruled $?gen257 ) ) ) ( message-modify-instance ?gen254 ( negative-overruled $?gen259 ) ) )
( defrule pen3-overruled-gen474 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen261 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen260 & : ( >= ?gen260 1 ) ) ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( value 6 ) ( negative-support $?gen257 ) ( negative-overruled $?gen258 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen257 $$$ $?gen258 ) ) ) ) ( positive-defeated $?gen256 & : ( not ( member$ pen3 $?gen256 ) ) ) ) ( test ( eq ( class ?gen254 ) max_imprisonment_months ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen257 (create$) ) ) ) ( not ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( negative-overruled $?gen259 & : ( eq $?gen259 ( create$ pen3-overruled $?gen257 $?gen258 ) ) ) ) ) ( test ( instance-existp ?gen254 ) ) => ( bind $?gen259 ( create$ pen3-overruled $?gen257 $?gen258 ) ) ( message-modify-instance ?gen254 ( negative-overruled $?gen259 ) ) )
( defrule pen3-support-gen476 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen253 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( value 6 ) ( positive-support $?gen256 & : ( not ( subseq-pos ( create$ pen3 ?gen253 $$$ $?gen256 ) ) ) ) ) ( test ( eq ( class ?gen254 ) max_imprisonment_months ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen254 ) ( is-a max_imprisonment_months ) ( positive-support $?gen259 & : ( eq $?gen259 ( create$ pen3 ?gen253 $?gen256 ) ) ) ) ) ( test ( instance-existp ?gen254 ) ) => ( bind $?gen259 ( create$ pen3 ?gen253 $?gen256 ) ) ( message-modify-instance ?gen254 ( positive-support $?gen259 ) ) )
( defrule pen2-defeasibly-dot-gen478 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( value 2000 ) ( positive 1 ) ( positive-derivator pen2 $? ) ) ( test ( eq ( class ?gen245 ) to_pay_max ) ) ( not ( and ( object ( name ?gen252 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen251 & : ( >= ?gen251 1 ) ) ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( negative ~ 2 ) ( positive-overruled $?gen247 & : ( not ( member$ pen2 $?gen247 ) ) ) ) ) )  ( not ( object ( name ?gen245 ) ( is-a to_pay_max ) ( positive 0 ) ) ) ( test ( instance-existp ?gen245 ) ) => ( message-modify-instance ?gen245 ( positive 0 ) ) )
( defrule pen2-defeasibly-gen480 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen252 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen251 & : ( >= ?gen251 1 ) ) ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( value 2000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen247 & : ( not ( member$ pen2 $?gen247 ) ) ) ) ( test ( eq ( class ?gen245 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen245 ) ( is-a to_pay_max ) ( positive 1 ) ( positive-derivator pen2 ?gen252 ) ) ) ( test ( instance-existp ?gen245 ) ) => ( message-modify-instance ?gen245 ( positive 1 ) ( positive-derivator pen2 ?gen252 ) ) )
( defrule pen2-overruled-dot-gen482 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( value 2000 ) ( negative-support $?gen248 ) ( negative-overruled $?gen249 & : ( subseq-pos ( create$ pen2-overruled $?gen248 $$$ $?gen249 ) ) ) ) ( test ( eq ( class ?gen245 ) to_pay_max ) ) ( not ( and ( object ( name ?gen252 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen251 & : ( >= ?gen251 1 ) ) ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( positive-defeated $?gen247 & : ( not ( member$ pen2 $?gen247 ) ) ) ) ) ) ( test ( neq $?gen248 (create$) ) ) ( not ( object ( name ?gen245 ) ( is-a to_pay_max ) ( negative-overruled $?gen250 & : ( eq $?gen250 ( delete-member$ $?gen249 ( create$ pen2-overruled $?gen248 ) ) ) ) ) ) ( test ( instance-existp ?gen245 ) ) => ( bind $?gen250 ( delete-member$ $?gen249 ( create$ pen2-overruled $?gen248 ) ) ) ( message-modify-instance ?gen245 ( negative-overruled $?gen250 ) ) )
( defrule pen2-overruled-gen484 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen252 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen251 & : ( >= ?gen251 1 ) ) ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( value 2000 ) ( negative-support $?gen248 ) ( negative-overruled $?gen249 & : ( not ( subseq-pos ( create$ pen2-overruled $?gen248 $$$ $?gen249 ) ) ) ) ( positive-defeated $?gen247 & : ( not ( member$ pen2 $?gen247 ) ) ) ) ( test ( eq ( class ?gen245 ) to_pay_max ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen248 (create$) ) ) ) ( not ( object ( name ?gen245 ) ( is-a to_pay_max ) ( negative-overruled $?gen250 & : ( eq $?gen250 ( create$ pen2-overruled $?gen248 $?gen249 ) ) ) ) ) ( test ( instance-existp ?gen245 ) ) => ( bind $?gen250 ( create$ pen2-overruled $?gen248 $?gen249 ) ) ( message-modify-instance ?gen245 ( negative-overruled $?gen250 ) ) )
( defrule pen2-support-gen486 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen244 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen245 ) ( is-a to_pay_max ) ( value 2000 ) ( positive-support $?gen247 & : ( not ( subseq-pos ( create$ pen2 ?gen244 $$$ $?gen247 ) ) ) ) ) ( test ( eq ( class ?gen245 ) to_pay_max ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen245 ) ( is-a to_pay_max ) ( positive-support $?gen250 & : ( eq $?gen250 ( create$ pen2 ?gen244 $?gen247 ) ) ) ) ) ( test ( instance-existp ?gen245 ) ) => ( bind $?gen250 ( create$ pen2 ?gen244 $?gen247 ) ) ( message-modify-instance ?gen245 ( positive-support $?gen250 ) ) )
( defrule pen1-defeasibly-dot-gen488 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( value 500 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen236 ) to_pay_min ) ) ( not ( and ( object ( name ?gen243 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen242 & : ( >= ?gen242 1 ) ) ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( negative ~ 2 ) ( positive-overruled $?gen238 & : ( not ( member$ pen1 $?gen238 ) ) ) ) ) )  ( not ( object ( name ?gen236 ) ( is-a to_pay_min ) ( positive 0 ) ) ) ( test ( instance-existp ?gen236 ) ) => ( message-modify-instance ?gen236 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen490 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen243 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen242 & : ( >= ?gen242 1 ) ) ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( value 500 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen238 & : ( not ( member$ pen1 $?gen238 ) ) ) ) ( test ( eq ( class ?gen236 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen236 ) ( is-a to_pay_min ) ( positive 1 ) ( positive-derivator pen1 ?gen243 ) ) ) ( test ( instance-existp ?gen236 ) ) => ( message-modify-instance ?gen236 ( positive 1 ) ( positive-derivator pen1 ?gen243 ) ) )
( defrule pen1-overruled-dot-gen492 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( value 500 ) ( negative-support $?gen239 ) ( negative-overruled $?gen240 & : ( subseq-pos ( create$ pen1-overruled $?gen239 $$$ $?gen240 ) ) ) ) ( test ( eq ( class ?gen236 ) to_pay_min ) ) ( not ( and ( object ( name ?gen243 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen242 & : ( >= ?gen242 1 ) ) ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( positive-defeated $?gen238 & : ( not ( member$ pen1 $?gen238 ) ) ) ) ) ) ( test ( neq $?gen239 (create$) ) ) ( not ( object ( name ?gen236 ) ( is-a to_pay_min ) ( negative-overruled $?gen241 & : ( eq $?gen241 ( delete-member$ $?gen240 ( create$ pen1-overruled $?gen239 ) ) ) ) ) ) ( test ( instance-existp ?gen236 ) ) => ( bind $?gen241 ( delete-member$ $?gen240 ( create$ pen1-overruled $?gen239 ) ) ) ( message-modify-instance ?gen236 ( negative-overruled $?gen241 ) ) )
( defrule pen1-overruled-gen494 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen243 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen242 & : ( >= ?gen242 1 ) ) ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( value 500 ) ( negative-support $?gen239 ) ( negative-overruled $?gen240 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen239 $$$ $?gen240 ) ) ) ) ( positive-defeated $?gen238 & : ( not ( member$ pen1 $?gen238 ) ) ) ) ( test ( eq ( class ?gen236 ) to_pay_min ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen239 (create$) ) ) ) ( not ( object ( name ?gen236 ) ( is-a to_pay_min ) ( negative-overruled $?gen241 & : ( eq $?gen241 ( create$ pen1-overruled $?gen239 $?gen240 ) ) ) ) ) ( test ( instance-existp ?gen236 ) ) => ( bind $?gen241 ( create$ pen1-overruled $?gen239 $?gen240 ) ) ( message-modify-instance ?gen236 ( negative-overruled $?gen241 ) ) )
( defrule pen1-support-gen496 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen235 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen236 ) ( is-a to_pay_min ) ( value 500 ) ( positive-support $?gen238 & : ( not ( subseq-pos ( create$ pen1 ?gen235 $$$ $?gen238 ) ) ) ) ) ( test ( eq ( class ?gen236 ) to_pay_min ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen236 ) ( is-a to_pay_min ) ( positive-support $?gen241 & : ( eq $?gen241 ( create$ pen1 ?gen235 $?gen238 ) ) ) ) ) ( test ( instance-existp ?gen236 ) ) => ( bind $?gen241 ( create$ pen1 ?gen235 $?gen238 ) ) ( message-modify-instance ?gen236 ( positive-support $?gen241 ) ) )
( defrule rule12-defeasibly-dot-gen498 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule12 $? ) ) ( test ( eq ( class ?gen227 ) illegal_fishing_confiscation ) ) ( not ( and ( object ( name ?gen234 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen233 & : ( >= ?gen233 1 ) ) ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( positive ~ 2 ) ( negative-overruled $?gen229 & : ( not ( member$ rule12 $?gen229 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( negative 0 ) ) ) ( test ( instance-existp ?gen227 ) ) => ( message-modify-instance ?gen227 ( negative 0 ) ) )
( defrule rule12-defeasibly-gen500 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen234 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen233 & : ( >= ?gen233 1 ) ) ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen229 & : ( not ( member$ rule12 $?gen229 ) ) ) ) ( test ( eq ( class ?gen227 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( negative 1 ) ( negative-derivator rule12 ?gen234 ) ) ) ( test ( instance-existp ?gen227 ) ) => ( message-modify-instance ?gen227 ( negative 1 ) ( negative-derivator rule12 ?gen234 ) ) )
( defrule rule12-overruled-dot-gen502 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-support $?gen230 ) ( positive-overruled $?gen231 & : ( subseq-pos ( create$ rule12-overruled $?gen230 $$$ $?gen231 ) ) ) ) ( test ( eq ( class ?gen227 ) illegal_fishing_confiscation ) ) ( not ( and ( object ( name ?gen234 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen233 & : ( >= ?gen233 1 ) ) ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( negative-defeated $?gen229 & : ( not ( member$ rule12 $?gen229 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen230 (create$) ) ) ) ( not ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( positive-overruled $?gen232 & : ( eq $?gen232 ( delete-member$ $?gen231 ( create$ rule12-overruled $?gen230 ) ) ) ) ) ) ( test ( instance-existp ?gen227 ) ) => ( bind $?gen232 ( delete-member$ $?gen231 ( create$ rule12-overruled $?gen230 ) ) ) ( message-modify-instance ?gen227 ( positive-overruled $?gen232 ) ) )
( defrule rule12-overruled-gen504 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen234 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive ?gen233 & : ( >= ?gen233 1 ) ) ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-support $?gen230 ) ( positive-overruled $?gen231 & : ( not ( subseq-pos ( create$ rule12-overruled $?gen230 $$$ $?gen231 ) ) ) ) ( negative-defeated $?gen229 & : ( not ( member$ rule12 $?gen229 ) ) ) ) ( test ( eq ( class ?gen227 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen230 (create$) ) ) ) ( not ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( positive-overruled $?gen232 & : ( eq $?gen232 ( create$ rule12-overruled $?gen230 $?gen231 ) ) ) ) ) ( test ( instance-existp ?gen227 ) ) => ( bind $?gen232 ( create$ rule12-overruled $?gen230 $?gen231 ) ) ( message-modify-instance ?gen227 ( positive-overruled $?gen232 ) ) )
( defrule rule12-support-gen506 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen226 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative-support $?gen229 & : ( not ( subseq-pos ( create$ rule12 ?gen226 $$$ $?gen229 ) ) ) ) ) ( test ( eq ( class ?gen227 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen227 ) ( is-a illegal_fishing_confiscation ) ( negative-support $?gen232 & : ( eq $?gen232 ( create$ rule12 ?gen226 $?gen229 ) ) ) ) ) ( test ( instance-existp ?gen227 ) ) => ( bind $?gen232 ( create$ rule12 ?gen226 $?gen229 ) ) ( message-modify-instance ?gen227 ( negative-support $?gen232 ) ) )
( defrule rule11-defeated-dot-gen508 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-defeated $?gen221 & : ( subseq-pos ( create$ rule11-defeated rule10 rule1 $$$ $?gen221 ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( not ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( positive-defeated $?gen220 & : ( eq $?gen220 ( delete-member$ $?gen221 ( create$ rule11-defeated rule10 rule1 ) ) ) ) ) ) ( test ( instance-existp ?gen218 ) ) => ( bind $?gen220 ( delete-member$ $?gen221 ( create$ rule11-defeated rule10 rule1 ) ) ) ( message-modify-instance ?gen218 ( positive-defeated $?gen220 ) ) )
( defrule rule11-defeated-gen510 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-defeated $?gen221 & : ( not ( subseq-pos ( create$ rule11-defeated rule10 rule1 $$$ $?gen221 ) ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( positive-defeated $?gen220 & : ( eq $?gen220 ( create$ rule11-defeated rule10 rule1 $?gen221 ) ) ) ) ) ( test ( instance-existp ?gen218 ) ) => ( bind $?gen220 ( create$ rule11-defeated rule10 rule1 $?gen221 ) ) ( message-modify-instance ?gen218 ( positive-defeated $?gen220 ) ) )
( defrule rule11-defeasibly-dot-gen512 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule11 $? ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( not ( and ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( positive ~ 2 ) ( negative-overruled $?gen220 & : ( not ( member$ rule11 $?gen220 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( negative 0 ) ) ) ( test ( instance-existp ?gen218 ) ) => ( message-modify-instance ?gen218 ( negative 0 ) ) )
( defrule rule11-defeasibly-gen514 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen220 & : ( not ( member$ rule11 $?gen220 ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( negative 1 ) ( negative-derivator rule11 ?gen225 ) ) ) ( test ( instance-existp ?gen218 ) ) => ( message-modify-instance ?gen218 ( negative 1 ) ( negative-derivator rule11 ?gen225 ) ) )
( defrule rule11-overruled-dot-gen516 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-support $?gen221 ) ( positive-overruled $?gen222 & : ( subseq-pos ( create$ rule11-overruled $?gen221 $$$ $?gen222 ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( not ( and ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( negative-defeated $?gen220 & : ( not ( member$ rule11 $?gen220 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen221 (create$) ) ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( positive-overruled $?gen223 & : ( eq $?gen223 ( delete-member$ $?gen222 ( create$ rule11-overruled $?gen221 ) ) ) ) ) ) ( test ( instance-existp ?gen218 ) ) => ( bind $?gen223 ( delete-member$ $?gen222 ( create$ rule11-overruled $?gen221 ) ) ) ( message-modify-instance ?gen218 ( positive-overruled $?gen223 ) ) )
( defrule rule11-overruled-gen518 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen225 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen224 & : ( >= ?gen224 1 ) ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( positive-support $?gen221 ) ( positive-overruled $?gen222 & : ( not ( subseq-pos ( create$ rule11-overruled $?gen221 $$$ $?gen222 ) ) ) ) ( negative-defeated $?gen220 & : ( not ( member$ rule11 $?gen220 ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen221 (create$) ) ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( positive-overruled $?gen223 & : ( eq $?gen223 ( create$ rule11-overruled $?gen221 $?gen222 ) ) ) ) ) ( test ( instance-existp ?gen218 ) ) => ( bind $?gen223 ( create$ rule11-overruled $?gen221 $?gen222 ) ) ( message-modify-instance ?gen218 ( positive-overruled $?gen223 ) ) )
( defrule rule11-support-gen520 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen217 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ( negative-support $?gen220 & : ( not ( subseq-pos ( create$ rule11 ?gen217 $$$ $?gen220 ) ) ) ) ) ( test ( eq ( class ?gen218 ) illegal_fishing_confiscation ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen218 ) ( is-a illegal_fishing_confiscation ) ( negative-support $?gen223 & : ( eq $?gen223 ( create$ rule11 ?gen217 $?gen220 ) ) ) ) ) ( test ( instance-existp ?gen218 ) ) => ( bind $?gen223 ( create$ rule11 ?gen217 $?gen220 ) ) ( message-modify-instance ?gen218 ( negative-support $?gen223 ) ) )
( defrule rule10-defeated-dot-gen522 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen204 & : ( subseq-pos ( create$ rule10-defeated rule9 $$$ $?gen204 ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen203 & : ( eq $?gen203 ( delete-member$ $?gen204 ( create$ rule10-defeated rule9 ) ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen203 ( delete-member$ $?gen204 ( create$ rule10-defeated rule9 ) ) ) ( message-modify-instance ?gen201 ( negative-defeated $?gen203 ) ) )
( defrule rule10-defeated-gen524 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen204 & : ( not ( subseq-pos ( create$ rule10-defeated rule9 $$$ $?gen204 ) ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?fish_number (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen203 & : ( eq $?gen203 ( create$ rule10-defeated rule9 $?gen204 ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen203 ( create$ rule10-defeated rule9 $?gen204 ) ) ( message-modify-instance ?gen201 ( negative-defeated $?gen203 ) ) )
( defrule rule10-defeasibly-dot-gen526 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule10 $? ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen203 & : ( not ( member$ rule10 $?gen203 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen201 ) ) => ( message-modify-instance ?gen201 ( positive 0 ) ) )
( defrule rule10-defeasibly-gen528 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen203 & : ( not ( member$ rule10 $?gen203 ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?fish_number (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule10 ?gen208 ?gen210 ?gen212 ?gen214 ?gen216 ) ) ) ( test ( instance-existp ?gen201 ) ) => ( message-modify-instance ?gen201 ( positive 1 ) ( positive-derivator rule10 ?gen208 ?gen210 ?gen212 ?gen214 ?gen216 ) ) )
( defrule rule10-overruled-dot-gen530 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen204 ) ( negative-overruled $?gen205 & : ( subseq-pos ( create$ rule10-overruled $?gen204 $$$ $?gen205 ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen203 & : ( not ( member$ rule10 $?gen203 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen204 (create$) ) ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen206 & : ( eq $?gen206 ( delete-member$ $?gen205 ( create$ rule10-overruled $?gen204 ) ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( delete-member$ $?gen205 ( create$ rule10-overruled $?gen204 ) ) ) ( message-modify-instance ?gen201 ( negative-overruled $?gen206 ) ) )
( defrule rule10-overruled-gen532 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen208 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen207 & : ( >= ?gen207 1 ) ) ) ( object ( name ?gen210 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen209 & : ( >= ?gen209 1 ) ) ) ( object ( name ?gen212 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen211 & : ( >= ?gen211 1 ) ) ) ( object ( name ?gen214 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen216 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ( positive ?gen215 & : ( >= ?gen215 1 ) ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen204 ) ( negative-overruled $?gen205 & : ( not ( subseq-pos ( create$ rule10-overruled $?gen204 $$$ $?gen205 ) ) ) ) ( positive-defeated $?gen203 & : ( not ( member$ rule10 $?gen203 ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?fish_number (create$) ) ( neq ?Defendant nil ) ( neq $?gen204 (create$) ) ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen206 & : ( eq $?gen206 ( create$ rule10-overruled $?gen204 $?gen205 ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( create$ rule10-overruled $?gen204 $?gen205 ) ) ( message-modify-instance ?gen201 ( negative-overruled $?gen206 ) ) )
( defrule rule10-support-gen534 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen195 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen196 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen197 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen198 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen199 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:fish_number ?fish_number ) ) ( test ( > ?fish_number 5 ) ) ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen203 & : ( not ( subseq-pos ( create$ rule10 ?gen195 ?gen196 ?gen197 ?gen198 ?gen199 $$$ $?gen203 ) ) ) ) ) ( test ( eq ( class ?gen201 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?fish_number (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen201 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen206 & : ( eq $?gen206 ( create$ rule10 ?gen195 ?gen196 ?gen197 ?gen198 ?gen199 $?gen203 ) ) ) ) ) ( test ( instance-existp ?gen201 ) ) => ( bind $?gen206 ( create$ rule10 ?gen195 ?gen196 ?gen197 ?gen198 ?gen199 $?gen203 ) ) ( message-modify-instance ?gen201 ( positive-support $?gen206 ) ) )
( defrule rule9-defeated-dot-gen536 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen180 & : ( subseq-pos ( create$ rule9-defeated rule7 $$$ $?gen180 ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen179 & : ( eq $?gen179 ( delete-member$ $?gen180 ( create$ rule9-defeated rule7 ) ) ) ) ) ) ( test ( instance-existp ?gen177 ) ) => ( bind $?gen179 ( delete-member$ $?gen180 ( create$ rule9-defeated rule7 ) ) ) ( message-modify-instance ?gen177 ( negative-defeated $?gen179 ) ) )
( defrule rule9-defeated-gen538 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen180 & : ( not ( subseq-pos ( create$ rule9-defeated rule7 $$$ $?gen180 ) ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Fish (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen179 & : ( eq $?gen179 ( create$ rule9-defeated rule7 $?gen180 ) ) ) ) ) ( test ( instance-existp ?gen177 ) ) => ( bind $?gen179 ( create$ rule9-defeated rule7 $?gen180 ) ) ( message-modify-instance ?gen177 ( negative-defeated $?gen179 ) ) )
( defrule rule9-defeasibly-dot-gen540 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule9 $? ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen179 & : ( not ( member$ rule9 $?gen179 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen177 ) ) => ( message-modify-instance ?gen177 ( positive 0 ) ) )
( defrule rule9-defeasibly-gen542 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen179 & : ( not ( member$ rule9 $?gen179 ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Fish (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule9 ?gen184 ?gen186 ?gen188 ?gen190 ?gen192 ?gen194 ) ) ) ( test ( instance-existp ?gen177 ) ) => ( message-modify-instance ?gen177 ( positive 1 ) ( positive-derivator rule9 ?gen184 ?gen186 ?gen188 ?gen190 ?gen192 ?gen194 ) ) )
( defrule rule9-overruled-dot-gen544 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen180 ) ( negative-overruled $?gen181 & : ( subseq-pos ( create$ rule9-overruled $?gen180 $$$ $?gen181 ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen179 & : ( not ( member$ rule9 $?gen179 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen180 (create$) ) ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen182 & : ( eq $?gen182 ( delete-member$ $?gen181 ( create$ rule9-overruled $?gen180 ) ) ) ) ) ) ( test ( instance-existp ?gen177 ) ) => ( bind $?gen182 ( delete-member$ $?gen181 ( create$ rule9-overruled $?gen180 ) ) ) ( message-modify-instance ?gen177 ( negative-overruled $?gen182 ) ) )
( defrule rule9-overruled-gen546 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen184 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen183 & : ( >= ?gen183 1 ) ) ) ( object ( name ?gen186 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen185 & : ( >= ?gen185 1 ) ) ) ( object ( name ?gen188 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen187 & : ( >= ?gen187 1 ) ) ) ( object ( name ?gen190 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen189 & : ( >= ?gen189 1 ) ) ) ( object ( name ?gen192 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ( object ( name ?gen194 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen193 & : ( >= ?gen193 1 ) ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen180 ) ( negative-overruled $?gen181 & : ( not ( subseq-pos ( create$ rule9-overruled $?gen180 $$$ $?gen181 ) ) ) ) ( positive-defeated $?gen179 & : ( not ( member$ rule9 $?gen179 ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Fish (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen180 (create$) ) ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen182 & : ( eq $?gen182 ( create$ rule9-overruled $?gen180 $?gen181 ) ) ) ) ) ( test ( instance-existp ?gen177 ) ) => ( bind $?gen182 ( create$ rule9-overruled $?gen180 $?gen181 ) ) ( message-modify-instance ?gen177 ( negative-overruled $?gen182 ) ) )
( defrule rule9-support-gen548 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen171 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen172 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen173 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen174 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen175 ) ( is-a lc:case ) ( lc:fish ?Fish ) ( lc:have "greater_biological_worth" ) ) ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen179 & : ( not ( subseq-pos ( create$ rule9 ?gen171 ?gen172 ?gen173 ?gen174 ?gen175 ?gen176 $$$ $?gen179 ) ) ) ) ) ( test ( eq ( class ?gen177 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Fish (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen177 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen182 & : ( eq $?gen182 ( create$ rule9 ?gen171 ?gen172 ?gen173 ?gen174 ?gen175 ?gen176 $?gen179 ) ) ) ) ) ( test ( instance-existp ?gen177 ) ) => ( bind $?gen182 ( create$ rule9 ?gen171 ?gen172 ?gen173 ?gen174 ?gen175 ?gen176 $?gen179 ) ) ( message-modify-instance ?gen177 ( positive-support $?gen182 ) ) )
( defrule rule8-defeasibly-dot-gen550 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule8 $? ) ) ( test ( eq ( class ?gen163 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen170 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen169 & : ( >= ?gen169 1 ) ) ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( positive ~ 2 ) ( negative-overruled $?gen165 & : ( not ( member$ rule8 $?gen165 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen163 ) ) => ( message-modify-instance ?gen163 ( negative 0 ) ) )
( defrule rule8-defeasibly-gen552 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen170 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen169 & : ( >= ?gen169 1 ) ) ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen165 & : ( not ( member$ rule8 $?gen165 ) ) ) ) ( test ( eq ( class ?gen163 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( negative 1 ) ( negative-derivator rule8 ?gen170 ) ) ) ( test ( instance-existp ?gen163 ) ) => ( message-modify-instance ?gen163 ( negative 1 ) ( negative-derivator rule8 ?gen170 ) ) )
( defrule rule8-overruled-dot-gen554 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive-support $?gen166 ) ( positive-overruled $?gen167 & : ( subseq-pos ( create$ rule8-overruled $?gen166 $$$ $?gen167 ) ) ) ) ( test ( eq ( class ?gen163 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen170 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen169 & : ( >= ?gen169 1 ) ) ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( negative-defeated $?gen165 & : ( not ( member$ rule8 $?gen165 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen166 (create$) ) ) ) ( not ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( positive-overruled $?gen168 & : ( eq $?gen168 ( delete-member$ $?gen167 ( create$ rule8-overruled $?gen166 ) ) ) ) ) ) ( test ( instance-existp ?gen163 ) ) => ( bind $?gen168 ( delete-member$ $?gen167 ( create$ rule8-overruled $?gen166 ) ) ) ( message-modify-instance ?gen163 ( positive-overruled $?gen168 ) ) )
( defrule rule8-overruled-gen556 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen170 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive ?gen169 & : ( >= ?gen169 1 ) ) ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive-support $?gen166 ) ( positive-overruled $?gen167 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen166 $$$ $?gen167 ) ) ) ) ( negative-defeated $?gen165 & : ( not ( member$ rule8 $?gen165 ) ) ) ) ( test ( eq ( class ?gen163 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen166 (create$) ) ) ) ( not ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( positive-overruled $?gen168 & : ( eq $?gen168 ( create$ rule8-overruled $?gen166 $?gen167 ) ) ) ) ) ( test ( instance-existp ?gen163 ) ) => ( bind $?gen168 ( create$ rule8-overruled $?gen166 $?gen167 ) ) ( message-modify-instance ?gen163 ( positive-overruled $?gen168 ) ) )
( defrule rule8-support-gen558 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen162 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-support $?gen165 & : ( not ( subseq-pos ( create$ rule8 ?gen162 $$$ $?gen165 ) ) ) ) ) ( test ( eq ( class ?gen163 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen163 ) ( is-a illegal_fishing_lvl1 ) ( negative-support $?gen168 & : ( eq $?gen168 ( create$ rule8 ?gen162 $?gen165 ) ) ) ) ) ( test ( instance-existp ?gen163 ) ) => ( bind $?gen168 ( create$ rule8 ?gen162 $?gen165 ) ) ( message-modify-instance ?gen163 ( negative-support $?gen168 ) ) )
( defrule rule7-defeated-dot-gen560 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen149 & : ( subseq-pos ( create$ rule7-defeated rule6 $$$ $?gen149 ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen148 & : ( eq $?gen148 ( delete-member$ $?gen149 ( create$ rule7-defeated rule6 ) ) ) ) ) ) ( test ( instance-existp ?gen146 ) ) => ( bind $?gen148 ( delete-member$ $?gen149 ( create$ rule7-defeated rule6 ) ) ) ( message-modify-instance ?gen146 ( negative-defeated $?gen148 ) ) )
( defrule rule7-defeated-gen562 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen149 & : ( not ( subseq-pos ( create$ rule7-defeated rule6 $$$ $?gen149 ) ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen148 & : ( eq $?gen148 ( create$ rule7-defeated rule6 $?gen149 ) ) ) ) ) ( test ( instance-existp ?gen146 ) ) => ( bind $?gen148 ( create$ rule7-defeated rule6 $?gen149 ) ) ( message-modify-instance ?gen146 ( negative-defeated $?gen148 ) ) )
( defrule rule7-defeasibly-dot-gen564 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule7 $? ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen148 & : ( not ( member$ rule7 $?gen148 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen146 ) ) => ( message-modify-instance ?gen146 ( positive 0 ) ) )
( defrule rule7-defeasibly-gen566 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen148 & : ( not ( member$ rule7 $?gen148 ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule7 ?gen153 ?gen155 ?gen157 ?gen159 ?gen161 ) ) ) ( test ( instance-existp ?gen146 ) ) => ( message-modify-instance ?gen146 ( positive 1 ) ( positive-derivator rule7 ?gen153 ?gen155 ?gen157 ?gen159 ?gen161 ) ) )
( defrule rule7-overruled-dot-gen568 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen149 ) ( negative-overruled $?gen150 & : ( subseq-pos ( create$ rule7-overruled $?gen149 $$$ $?gen150 ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen148 & : ( not ( member$ rule7 $?gen148 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen149 (create$) ) ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen151 & : ( eq $?gen151 ( delete-member$ $?gen150 ( create$ rule7-overruled $?gen149 ) ) ) ) ) ) ( test ( instance-existp ?gen146 ) ) => ( bind $?gen151 ( delete-member$ $?gen150 ( create$ rule7-overruled $?gen149 ) ) ) ( message-modify-instance ?gen146 ( negative-overruled $?gen151 ) ) )
( defrule rule7-overruled-gen570 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen152 & : ( >= ?gen152 1 ) ) ) ( object ( name ?gen155 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen154 & : ( >= ?gen154 1 ) ) ) ( object ( name ?gen157 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen156 & : ( >= ?gen156 1 ) ) ) ( object ( name ?gen159 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ( positive ?gen158 & : ( >= ?gen158 1 ) ) ) ( object ( name ?gen161 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen160 & : ( >= ?gen160 1 ) ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen149 ) ( negative-overruled $?gen150 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen149 $$$ $?gen150 ) ) ) ) ( positive-defeated $?gen148 & : ( not ( member$ rule7 $?gen148 ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen149 (create$) ) ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen151 & : ( eq $?gen151 ( create$ rule7-overruled $?gen149 $?gen150 ) ) ) ) ) ( test ( instance-existp ?gen146 ) ) => ( bind $?gen151 ( create$ rule7-overruled $?gen149 $?gen150 ) ) ( message-modify-instance ?gen146 ( negative-overruled $?gen151 ) ) )
( defrule rule7-support-gen572 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen141 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen142 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen143 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen144 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "mass_destruction" ) ) ( object ( name ?gen145 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen148 & : ( not ( subseq-pos ( create$ rule7 ?gen141 ?gen142 ?gen143 ?gen144 ?gen145 $$$ $?gen148 ) ) ) ) ) ( test ( eq ( class ?gen146 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen146 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen151 & : ( eq $?gen151 ( create$ rule7 ?gen141 ?gen142 ?gen143 ?gen144 ?gen145 $?gen148 ) ) ) ) ) ( test ( instance-existp ?gen146 ) ) => ( bind $?gen151 ( create$ rule7 ?gen141 ?gen142 ?gen143 ?gen144 ?gen145 $?gen148 ) ) ( message-modify-instance ?gen146 ( positive-support $?gen151 ) ) )
( defrule rule6-defeated-dot-gen574 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen128 & : ( subseq-pos ( create$ rule6-defeated rule5 $$$ $?gen128 ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen127 & : ( eq $?gen127 ( delete-member$ $?gen128 ( create$ rule6-defeated rule5 ) ) ) ) ) ) ( test ( instance-existp ?gen125 ) ) => ( bind $?gen127 ( delete-member$ $?gen128 ( create$ rule6-defeated rule5 ) ) ) ( message-modify-instance ?gen125 ( negative-defeated $?gen127 ) ) )
( defrule rule6-defeated-gen576 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen128 & : ( not ( subseq-pos ( create$ rule6-defeated rule5 $$$ $?gen128 ) ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen127 & : ( eq $?gen127 ( create$ rule6-defeated rule5 $?gen128 ) ) ) ) ) ( test ( instance-existp ?gen125 ) ) => ( bind $?gen127 ( create$ rule6-defeated rule5 $?gen128 ) ) ( message-modify-instance ?gen125 ( negative-defeated $?gen127 ) ) )
( defrule rule6-defeasibly-dot-gen578 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule6 $? ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen127 & : ( not ( member$ rule6 $?gen127 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen125 ) ) => ( message-modify-instance ?gen125 ( positive 0 ) ) )
( defrule rule6-defeasibly-gen580 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen127 & : ( not ( member$ rule6 $?gen127 ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule6 ?gen132 ?gen134 ?gen136 ?gen138 ?gen140 ) ) ) ( test ( instance-existp ?gen125 ) ) => ( message-modify-instance ?gen125 ( positive 1 ) ( positive-derivator rule6 ?gen132 ?gen134 ?gen136 ?gen138 ?gen140 ) ) )
( defrule rule6-overruled-dot-gen582 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen128 ) ( negative-overruled $?gen129 & : ( subseq-pos ( create$ rule6-overruled $?gen128 $$$ $?gen129 ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen127 & : ( not ( member$ rule6 $?gen127 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen128 (create$) ) ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen130 & : ( eq $?gen130 ( delete-member$ $?gen129 ( create$ rule6-overruled $?gen128 ) ) ) ) ) ) ( test ( instance-existp ?gen125 ) ) => ( bind $?gen130 ( delete-member$ $?gen129 ( create$ rule6-overruled $?gen128 ) ) ) ( message-modify-instance ?gen125 ( negative-overruled $?gen130 ) ) )
( defrule rule6-overruled-gen584 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen132 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen131 & : ( >= ?gen131 1 ) ) ) ( object ( name ?gen134 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen133 & : ( >= ?gen133 1 ) ) ) ( object ( name ?gen136 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen135 & : ( >= ?gen135 1 ) ) ) ( object ( name ?gen138 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ( object ( name ?gen140 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen139 & : ( >= ?gen139 1 ) ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen128 ) ( negative-overruled $?gen129 & : ( not ( subseq-pos ( create$ rule6-overruled $?gen128 $$$ $?gen129 ) ) ) ) ( positive-defeated $?gen127 & : ( not ( member$ rule6 $?gen127 ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen128 (create$) ) ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen130 & : ( eq $?gen130 ( create$ rule6-overruled $?gen128 $?gen129 ) ) ) ) ) ( test ( instance-existp ?gen125 ) ) => ( bind $?gen130 ( create$ rule6-overruled $?gen128 $?gen129 ) ) ( message-modify-instance ?gen125 ( negative-overruled $?gen130 ) ) )
( defrule rule6-support-gen586 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen120 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen121 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen122 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen123 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "harm_to_reproduction" ) ) ( object ( name ?gen124 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen127 & : ( not ( subseq-pos ( create$ rule6 ?gen120 ?gen121 ?gen122 ?gen123 ?gen124 $$$ $?gen127 ) ) ) ) ) ( test ( eq ( class ?gen125 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen125 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen130 & : ( eq $?gen130 ( create$ rule6 ?gen120 ?gen121 ?gen122 ?gen123 ?gen124 $?gen127 ) ) ) ) ) ( test ( instance-existp ?gen125 ) ) => ( bind $?gen130 ( create$ rule6 ?gen120 ?gen121 ?gen122 ?gen123 ?gen124 $?gen127 ) ) ( message-modify-instance ?gen125 ( positive-support $?gen130 ) ) )
( defrule rule5-defeated-dot-gen588 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen107 & : ( subseq-pos ( create$ rule5-defeated rule4 $$$ $?gen107 ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen106 & : ( eq $?gen106 ( delete-member$ $?gen107 ( create$ rule5-defeated rule4 ) ) ) ) ) ) ( test ( instance-existp ?gen104 ) ) => ( bind $?gen106 ( delete-member$ $?gen107 ( create$ rule5-defeated rule4 ) ) ) ( message-modify-instance ?gen104 ( negative-defeated $?gen106 ) ) )
( defrule rule5-defeated-gen590 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen107 & : ( not ( subseq-pos ( create$ rule5-defeated rule4 $$$ $?gen107 ) ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen106 & : ( eq $?gen106 ( create$ rule5-defeated rule4 $?gen107 ) ) ) ) ) ( test ( instance-existp ?gen104 ) ) => ( bind $?gen106 ( create$ rule5-defeated rule4 $?gen107 ) ) ( message-modify-instance ?gen104 ( negative-defeated $?gen106 ) ) )
( defrule rule5-defeasibly-dot-gen592 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule5 $? ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen106 & : ( not ( member$ rule5 $?gen106 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen104 ) ) => ( message-modify-instance ?gen104 ( positive 0 ) ) )
( defrule rule5-defeasibly-gen594 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen106 & : ( not ( member$ rule5 $?gen106 ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule5 ?gen111 ?gen113 ?gen115 ?gen117 ?gen119 ) ) ) ( test ( instance-existp ?gen104 ) ) => ( message-modify-instance ?gen104 ( positive 1 ) ( positive-derivator rule5 ?gen111 ?gen113 ?gen115 ?gen117 ?gen119 ) ) )
( defrule rule5-overruled-dot-gen596 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen107 ) ( negative-overruled $?gen108 & : ( subseq-pos ( create$ rule5-overruled $?gen107 $$$ $?gen108 ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen106 & : ( not ( member$ rule5 $?gen106 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen107 (create$) ) ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen109 & : ( eq $?gen109 ( delete-member$ $?gen108 ( create$ rule5-overruled $?gen107 ) ) ) ) ) ) ( test ( instance-existp ?gen104 ) ) => ( bind $?gen109 ( delete-member$ $?gen108 ( create$ rule5-overruled $?gen107 ) ) ) ( message-modify-instance ?gen104 ( negative-overruled $?gen109 ) ) )
( defrule rule5-overruled-gen598 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen111 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ( object ( name ?gen113 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen112 & : ( >= ?gen112 1 ) ) ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen118 & : ( >= ?gen118 1 ) ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen107 ) ( negative-overruled $?gen108 & : ( not ( subseq-pos ( create$ rule5-overruled $?gen107 $$$ $?gen108 ) ) ) ) ( positive-defeated $?gen106 & : ( not ( member$ rule5 $?gen106 ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen107 (create$) ) ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen109 & : ( eq $?gen109 ( create$ rule5-overruled $?gen107 $?gen108 ) ) ) ) ) ( test ( instance-existp ?gen104 ) ) => ( bind $?gen109 ( create$ rule5-overruled $?gen107 $?gen108 ) ) ( message-modify-instance ?gen104 ( negative-overruled $?gen109 ) ) )
( defrule rule5-support-gen600 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen99 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen100 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen101 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "stun_agent" ) ) ( object ( name ?gen102 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen106 & : ( not ( subseq-pos ( create$ rule5 ?gen99 ?gen100 ?gen101 ?gen102 ?gen103 $$$ $?gen106 ) ) ) ) ) ( test ( eq ( class ?gen104 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen104 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen109 & : ( eq $?gen109 ( create$ rule5 ?gen99 ?gen100 ?gen101 ?gen102 ?gen103 $?gen106 ) ) ) ) ) ( test ( instance-existp ?gen104 ) ) => ( bind $?gen109 ( create$ rule5 ?gen99 ?gen100 ?gen101 ?gen102 ?gen103 $?gen106 ) ) ( message-modify-instance ?gen104 ( positive-support $?gen109 ) ) )
( defrule rule4-defeated-dot-gen602 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen86 & : ( subseq-pos ( create$ rule4-defeated rule3 $$$ $?gen86 ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen85 & : ( eq $?gen85 ( delete-member$ $?gen86 ( create$ rule4-defeated rule3 ) ) ) ) ) ) ( test ( instance-existp ?gen83 ) ) => ( bind $?gen85 ( delete-member$ $?gen86 ( create$ rule4-defeated rule3 ) ) ) ( message-modify-instance ?gen83 ( negative-defeated $?gen85 ) ) )
( defrule rule4-defeated-gen604 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen86 & : ( not ( subseq-pos ( create$ rule4-defeated rule3 $$$ $?gen86 ) ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen85 & : ( eq $?gen85 ( create$ rule4-defeated rule3 $?gen86 ) ) ) ) ) ( test ( instance-existp ?gen83 ) ) => ( bind $?gen85 ( create$ rule4-defeated rule3 $?gen86 ) ) ( message-modify-instance ?gen83 ( negative-defeated $?gen85 ) ) )
( defrule rule4-defeasibly-dot-gen606 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule4 $? ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen85 & : ( not ( member$ rule4 $?gen85 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen83 ) ) => ( message-modify-instance ?gen83 ( positive 0 ) ) )
( defrule rule4-defeasibly-gen608 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen85 & : ( not ( member$ rule4 $?gen85 ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule4 ?gen90 ?gen92 ?gen94 ?gen96 ?gen98 ) ) ) ( test ( instance-existp ?gen83 ) ) => ( message-modify-instance ?gen83 ( positive 1 ) ( positive-derivator rule4 ?gen90 ?gen92 ?gen94 ?gen96 ?gen98 ) ) )
( defrule rule4-overruled-dot-gen610 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen86 ) ( negative-overruled $?gen87 & : ( subseq-pos ( create$ rule4-overruled $?gen86 $$$ $?gen87 ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen85 & : ( not ( member$ rule4 $?gen85 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen86 (create$) ) ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen88 & : ( eq $?gen88 ( delete-member$ $?gen87 ( create$ rule4-overruled $?gen86 ) ) ) ) ) ) ( test ( instance-existp ?gen83 ) ) => ( bind $?gen88 ( delete-member$ $?gen87 ( create$ rule4-overruled $?gen86 ) ) ) ( message-modify-instance ?gen83 ( negative-overruled $?gen88 ) ) )
( defrule rule4-overruled-gen612 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen90 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen89 & : ( >= ?gen89 1 ) ) ) ( object ( name ?gen92 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen91 & : ( >= ?gen91 1 ) ) ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ( positive ?gen93 & : ( >= ?gen93 1 ) ) ) ( object ( name ?gen96 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen95 & : ( >= ?gen95 1 ) ) ) ( object ( name ?gen98 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen97 & : ( >= ?gen97 1 ) ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen86 ) ( negative-overruled $?gen87 & : ( not ( subseq-pos ( create$ rule4-overruled $?gen86 $$$ $?gen87 ) ) ) ) ( positive-defeated $?gen85 & : ( not ( member$ rule4 $?gen85 ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen86 (create$) ) ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen88 & : ( eq $?gen88 ( create$ rule4-overruled $?gen86 $?gen87 ) ) ) ) ) ( test ( instance-existp ?gen83 ) ) => ( bind $?gen88 ( create$ rule4-overruled $?gen86 $?gen87 ) ) ( message-modify-instance ?gen83 ( negative-overruled $?gen88 ) ) )
( defrule rule4-support-gen614 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen78 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen79 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen80 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "electrical_current" ) ) ( object ( name ?gen81 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen82 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen85 & : ( not ( subseq-pos ( create$ rule4 ?gen78 ?gen79 ?gen80 ?gen81 ?gen82 $$$ $?gen85 ) ) ) ) ) ( test ( eq ( class ?gen83 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen83 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen88 & : ( eq $?gen88 ( create$ rule4 ?gen78 ?gen79 ?gen80 ?gen81 ?gen82 $?gen85 ) ) ) ) ) ( test ( instance-existp ?gen83 ) ) => ( bind $?gen88 ( create$ rule4 ?gen78 ?gen79 ?gen80 ?gen81 ?gen82 $?gen85 ) ) ( message-modify-instance ?gen83 ( positive-support $?gen88 ) ) )
( defrule rule3-defeated-dot-gen616 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen65 & : ( subseq-pos ( create$ rule3-defeated rule2 $$$ $?gen65 ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen64 & : ( eq $?gen64 ( delete-member$ $?gen65 ( create$ rule3-defeated rule2 ) ) ) ) ) ) ( test ( instance-existp ?gen62 ) ) => ( bind $?gen64 ( delete-member$ $?gen65 ( create$ rule3-defeated rule2 ) ) ) ( message-modify-instance ?gen62 ( negative-defeated $?gen64 ) ) )
( defrule rule3-defeated-gen618 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-defeated $?gen65 & : ( not ( subseq-pos ( create$ rule3-defeated rule2 $$$ $?gen65 ) ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( negative-defeated $?gen64 & : ( eq $?gen64 ( create$ rule3-defeated rule2 $?gen65 ) ) ) ) ) ( test ( instance-existp ?gen62 ) ) => ( bind $?gen64 ( create$ rule3-defeated rule2 $?gen65 ) ) ( message-modify-instance ?gen62 ( negative-defeated $?gen64 ) ) )
( defrule rule3-defeasibly-dot-gen620 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule3 $? ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( negative ~ 2 ) ( positive-overruled $?gen64 & : ( not ( member$ rule3 $?gen64 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen62 ) ) => ( message-modify-instance ?gen62 ( positive 0 ) ) )
( defrule rule3-defeasibly-gen622 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen64 & : ( not ( member$ rule3 $?gen64 ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( positive 1 ) ( positive-derivator rule3 ?gen69 ?gen71 ?gen73 ?gen75 ?gen77 ) ) ) ( test ( instance-existp ?gen62 ) ) => ( message-modify-instance ?gen62 ( positive 1 ) ( positive-derivator rule3 ?gen69 ?gen71 ?gen73 ?gen75 ?gen77 ) ) )
( defrule rule3-overruled-dot-gen624 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen65 ) ( negative-overruled $?gen66 & : ( subseq-pos ( create$ rule3-overruled $?gen65 $$$ $?gen66 ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( not ( and ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( positive-defeated $?gen64 & : ( not ( member$ rule3 $?gen64 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen65 (create$) ) ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen67 & : ( eq $?gen67 ( delete-member$ $?gen66 ( create$ rule3-overruled $?gen65 ) ) ) ) ) ) ( test ( instance-existp ?gen62 ) ) => ( bind $?gen67 ( delete-member$ $?gen66 ( create$ rule3-overruled $?gen65 ) ) ) ( message-modify-instance ?gen62 ( negative-overruled $?gen67 ) ) )
( defrule rule3-overruled-gen626 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen69 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen77 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen76 & : ( >= ?gen76 1 ) ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( negative-support $?gen65 ) ( negative-overruled $?gen66 & : ( not ( subseq-pos ( create$ rule3-overruled $?gen65 $$$ $?gen66 ) ) ) ) ( positive-defeated $?gen64 & : ( not ( member$ rule3 $?gen64 ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen65 (create$) ) ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( negative-overruled $?gen67 & : ( eq $?gen67 ( create$ rule3-overruled $?gen65 $?gen66 ) ) ) ) ) ( test ( instance-existp ?gen62 ) ) => ( bind $?gen67 ( create$ rule3-overruled $?gen65 $?gen66 ) ) ( message-modify-instance ?gen62 ( negative-overruled $?gen67 ) ) )
( defrule rule3-support-gen628 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen58 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen61 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ( positive-support $?gen64 & : ( not ( subseq-pos ( create$ rule3 ?gen57 ?gen58 ?gen59 ?gen60 ?gen61 $$$ $?gen64 ) ) ) ) ) ( test ( eq ( class ?gen62 ) illegal_fishing_lvl2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen62 ) ( is-a illegal_fishing_lvl2 ) ( positive-support $?gen67 & : ( eq $?gen67 ( create$ rule3 ?gen57 ?gen58 ?gen59 ?gen60 ?gen61 $?gen64 ) ) ) ) ) ( test ( instance-existp ?gen62 ) ) => ( bind $?gen67 ( create$ rule3 ?gen57 ?gen58 ?gen59 ?gen60 ?gen61 $?gen64 ) ) ( message-modify-instance ?gen62 ( positive-support $?gen67 ) ) )
( defrule rule2-defeated-dot-gen630 ( declare ( salience ( + 1000 ( calc-defeasible-priority -3 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-defeated $?gen44 & : ( subseq-pos ( create$ rule2-defeated rule1 $$$ $?gen44 ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( negative-defeated $?gen43 & : ( eq $?gen43 ( delete-member$ $?gen44 ( create$ rule2-defeated rule1 ) ) ) ) ) ) ( test ( instance-existp ?gen41 ) ) => ( bind $?gen43 ( delete-member$ $?gen44 ( create$ rule2-defeated rule1 ) ) ) ( message-modify-instance ?gen41 ( negative-defeated $?gen43 ) ) )
( defrule rule2-defeated-gen632 ( declare ( salience ( + 1000 ( calc-defeasible-priority 3 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-defeated $?gen44 & : ( not ( subseq-pos ( create$ rule2-defeated rule1 $$$ $?gen44 ) ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( negative-defeated $?gen43 & : ( eq $?gen43 ( create$ rule2-defeated rule1 $?gen44 ) ) ) ) ) ( test ( instance-existp ?gen41 ) ) => ( bind $?gen43 ( create$ rule2-defeated rule1 $?gen44 ) ) ( message-modify-instance ?gen41 ( negative-defeated $?gen43 ) ) )
( defrule rule2-defeasibly-dot-gen634 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule2 $? ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( negative ~ 2 ) ( positive-overruled $?gen43 & : ( not ( member$ rule2 $?gen43 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen41 ) ) => ( message-modify-instance ?gen41 ( positive 0 ) ) )
( defrule rule2-defeasibly-gen636 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen43 & : ( not ( member$ rule2 $?gen43 ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( positive 1 ) ( positive-derivator rule2 ?gen48 ?gen50 ?gen52 ?gen54 ?gen56 ) ) ) ( test ( instance-existp ?gen41 ) ) => ( message-modify-instance ?gen41 ( positive 1 ) ( positive-derivator rule2 ?gen48 ?gen50 ?gen52 ?gen54 ?gen56 ) ) )
( defrule rule2-overruled-dot-gen638 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-support $?gen44 ) ( negative-overruled $?gen45 & : ( subseq-pos ( create$ rule2-overruled $?gen44 $$$ $?gen45 ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( positive-defeated $?gen43 & : ( not ( member$ rule2 $?gen43 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen44 (create$) ) ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( negative-overruled $?gen46 & : ( eq $?gen46 ( delete-member$ $?gen45 ( create$ rule2-overruled $?gen44 ) ) ) ) ) ) ( test ( instance-existp ?gen41 ) ) => ( bind $?gen46 ( delete-member$ $?gen45 ( create$ rule2-overruled $?gen44 ) ) ) ( message-modify-instance ?gen41 ( negative-overruled $?gen46 ) ) )
( defrule rule2-overruled-gen640 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ( positive ?gen47 & : ( >= ?gen47 1 ) ) ) ( object ( name ?gen50 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ( positive ?gen49 & : ( >= ?gen49 1 ) ) ) ( object ( name ?gen52 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen51 & : ( >= ?gen51 1 ) ) ) ( object ( name ?gen54 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen53 & : ( >= ?gen53 1 ) ) ) ( object ( name ?gen56 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen55 & : ( >= ?gen55 1 ) ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-support $?gen44 ) ( negative-overruled $?gen45 & : ( not ( subseq-pos ( create$ rule2-overruled $?gen44 $$$ $?gen45 ) ) ) ) ( positive-defeated $?gen43 & : ( not ( member$ rule2 $?gen43 ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen44 (create$) ) ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( negative-overruled $?gen46 & : ( eq $?gen46 ( create$ rule2-overruled $?gen44 $?gen45 ) ) ) ) ) ( test ( instance-existp ?gen41 ) ) => ( bind $?gen46 ( create$ rule2-overruled $?gen44 $?gen45 ) ) ( message-modify-instance ?gen41 ( negative-overruled $?gen46 ) ) )
( defrule rule2-support-gen642 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen36 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen37 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_banned_waters" ) ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen39 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive-support $?gen43 & : ( not ( subseq-pos ( create$ rule2 ?gen36 ?gen37 ?gen38 ?gen39 ?gen40 $$$ $?gen43 ) ) ) ) ) ( test ( eq ( class ?gen41 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen41 ) ( is-a illegal_fishing_lvl1 ) ( positive-support $?gen46 & : ( eq $?gen46 ( create$ rule2 ?gen36 ?gen37 ?gen38 ?gen39 ?gen40 $?gen43 ) ) ) ) ) ( test ( instance-existp ?gen41 ) ) => ( bind $?gen46 ( create$ rule2 ?gen36 ?gen37 ?gen38 ?gen39 ?gen40 $?gen43 ) ) ( message-modify-instance ?gen41 ( positive-support $?gen46 ) ) )
( defrule rule1-defeasibly-dot-gen644 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen20 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen34 & : ( >= ?gen34 1 ) ) ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( negative ~ 2 ) ( positive-overruled $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen20 ) ) => ( message-modify-instance ?gen20 ( positive 0 ) ) )
( defrule rule1-defeasibly-gen646 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen34 & : ( >= ?gen34 1 ) ) ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ( test ( eq ( class ?gen20 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( positive 1 ) ( positive-derivator rule1 ?gen27 ?gen29 ?gen31 ?gen33 ?gen35 ) ) ) ( test ( instance-existp ?gen20 ) ) => ( message-modify-instance ?gen20 ( positive 1 ) ( positive-derivator rule1 ?gen27 ?gen29 ?gen31 ?gen33 ?gen35 ) ) )
( defrule rule1-overruled-dot-gen648 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-support $?gen23 ) ( negative-overruled $?gen24 & : ( subseq-pos ( create$ rule1-overruled $?gen23 $$$ $?gen24 ) ) ) ) ( test ( eq ( class ?gen20 ) illegal_fishing_lvl1 ) ) ( not ( and ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen34 & : ( >= ?gen34 1 ) ) ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( positive-defeated $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen23 (create$) ) ) ) ( not ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( negative-overruled $?gen25 & : ( eq $?gen25 ( delete-member$ $?gen24 ( create$ rule1-overruled $?gen23 ) ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( delete-member$ $?gen24 ( create$ rule1-overruled $?gen23 ) ) ) ( message-modify-instance ?gen20 ( negative-overruled $?gen25 ) ) )
( defrule rule1-overruled-gen650 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ( positive ?gen26 & : ( >= ?gen26 1 ) ) ) ( object ( name ?gen29 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ( positive ?gen28 & : ( >= ?gen28 1 ) ) ) ( object ( name ?gen31 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ( positive ?gen30 & : ( >= ?gen30 1 ) ) ) ( object ( name ?gen33 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ( object ( name ?gen35 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ( positive ?gen34 & : ( >= ?gen34 1 ) ) ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( negative-support $?gen23 ) ( negative-overruled $?gen24 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen23 $$$ $?gen24 ) ) ) ) ( positive-defeated $?gen22 & : ( not ( member$ rule1 $?gen22 ) ) ) ) ( test ( eq ( class ?gen20 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen23 (create$) ) ) ) ( not ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( negative-overruled $?gen25 & : ( eq $?gen25 ( create$ rule1-overruled $?gen23 $?gen24 ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( create$ rule1-overruled $?gen23 $?gen24 ) ) ( message-modify-instance ?gen20 ( negative-overruled $?gen25 ) ) )
( defrule rule1-support-gen652 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen17 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen18 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen19 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ( positive-support $?gen22 & : ( not ( subseq-pos ( create$ rule1 ?gen15 ?gen16 ?gen17 ?gen18 ?gen19 $$$ $?gen22 ) ) ) ) ) ( test ( eq ( class ?gen20 ) illegal_fishing_lvl1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen20 ) ( is-a illegal_fishing_lvl1 ) ( positive-support $?gen25 & : ( eq $?gen25 ( create$ rule1 ?gen15 ?gen16 ?gen17 ?gen18 ?gen19 $?gen22 ) ) ) ) ) ( test ( instance-existp ?gen20 ) ) => ( bind $?gen25 ( create$ rule1 ?gen15 ?gen16 ?gen17 ?gen18 ?gen19 $?gen22 ) ) ( message-modify-instance ?gen20 ( positive-support $?gen25 ) ) )
( defrule pen4-deductive-gen367 ( declare ( salience ( calc-salience max_imprisonment_years ) ) ) ( run-deductive-rules ) ( object ( name ?gen289 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_years ) ( value 3 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_years 3 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_years 3 ) ) ) ( make-instance ?oid of max_imprisonment_years ( value 3 ) ) )
( defrule pen3-deductive-gen366 ( declare ( salience ( calc-salience max_imprisonment_months ) ) ) ( run-deductive-rules ) ( object ( name ?gen253 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_months ) ( value 6 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_months 6 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_months 6 ) ) ) ( make-instance ?oid of max_imprisonment_months ( value 6 ) ) )
( defrule pen2-deductive-gen365 ( declare ( salience ( calc-salience to_pay_max ) ) ) ( run-deductive-rules ) ( object ( name ?gen244 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_max ) ( value 2000 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_max 2000 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_max 2000 ) ) ) ( make-instance ?oid of to_pay_max ( value 2000 ) ) )
( defrule pen1-deductive-gen364 ( declare ( salience ( calc-salience to_pay_min ) ) ) ( run-deductive-rules ) ( object ( name ?gen235 ) ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a to_pay_min ) ( value 500 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat to_pay_min 500 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat to_pay_min 500 ) ) ) ( make-instance ?oid of to_pay_min ( value 500 ) ) )
( defrule rule11-deductive-gen362 ( declare ( salience ( calc-salience illegal_fishing_confiscation ) ) ) ( run-deductive-rules ) ( object ( name ?gen217 ) ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a illegal_fishing_confiscation ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_confiscation ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_confiscation ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_confiscation ( defendant ?Defendant ) ) )
( defrule rule3-deductive-gen354 ( declare ( salience ( calc-salience illegal_fishing_lvl2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_regulated_period" ) ) ( object ( name ?gen58 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "explosives" ) ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen61 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl2 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl2 ( defendant ?Defendant ) ) )
( defrule rule1-deductive-gen352 ( declare ( salience ( calc-salience illegal_fishing_lvl1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_during "hunting_ban_period" ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:catches_in "hunting_regulated_waters" ) ) ( object ( name ?gen17 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:uses "adequate_tool" ) ) ( object ( name ?gen18 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:causes "no_harm" ) ) ( object ( name ?gen19 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:destroys_fish "no" ) ) ( not ( object ( is-a illegal_fishing_lvl1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat illegal_fishing_lvl1 ?Defendant ) ) ) ( make-instance ?oid of illegal_fishing_lvl1 ( defendant ?Defendant ) ) )
