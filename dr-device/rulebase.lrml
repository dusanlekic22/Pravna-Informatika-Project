<?xml version="1.0" encoding="UTF-8"?>
<lrml:LegalRuleML xmlns:lrml="http://docs.oasis-open.org/legalruleml/ns/v1.0/"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.oasis-open.org/legalruleml/ns/v1.0/ xsd-compact/lrml-compact.xsd"
	xmlns:ruleml="http://ruleml.org/spec">
	<lrml:Statements>
		<lrml:PrescriptiveStatement key="ps1">
			<ruleml:Rule key=":rule1" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>no_punishment</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps2">
			<ruleml:Rule key=":rule2" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps3">
			<ruleml:Rule key=":rule3" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps4">
			<ruleml:Rule key=":rule4" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps5">
			<ruleml:Rule key=":rule5" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps6">
			<ruleml:Rule key=":rule6" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps7">
			<ruleml:Rule key=":rule7" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps8">
			<ruleml:Rule key=":rule8" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps9">
			<ruleml:Rule key=":rule9" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps10">
			<ruleml:Rule key=":rule10" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps11">
			<ruleml:Rule key=":rule11" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps12">
			<ruleml:Rule key=":rule12" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps13">
			<ruleml:Rule key=":rule13" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps14">
			<ruleml:Rule key=":rule14" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps15">
			<ruleml:Rule key=":rule15" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps16">
			<ruleml:Rule key=":rule16" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps17">
			<ruleml:Rule key=":rule17" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps18">
			<ruleml:Rule key=":rule18" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps19">
			<ruleml:Rule key=":rule19" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps20">
			<ruleml:Rule key=":rule20" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps21">
			<ruleml:Rule key=":rule21" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps22">
			<ruleml:Rule key=":rule22" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps23">
			<ruleml:Rule key=":rule23" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps24">
			<ruleml:Rule key=":rule24" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps25">
			<ruleml:Rule key=":rule25" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps26">
			<ruleml:Rule key=":rule26" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps27">
			<ruleml:Rule key=":rule27" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps28">
			<ruleml:Rule key=":rule28" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps29">
			<ruleml:Rule key=":rule29" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps30">
			<ruleml:Rule key=":rule30" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps31">
			<ruleml:Rule key=":rule31" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps32">
			<ruleml:Rule key=":rule32" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">regular_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps33">
			<ruleml:Rule key=":rule33" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps34">
			<ruleml:Rule key=":rule34" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps35">
			<ruleml:Rule key=":rule35" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps36">
			<ruleml:Rule key=":rule36" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps37">
			<ruleml:Rule key=":rule37" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps38">
			<ruleml:Rule key=":rule38" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps39">
			<ruleml:Rule key=":rule39" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		
		<lrml:PrescriptiveStatement key="ps40">
			<ruleml:Rule key=":rule40" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps41">
			<ruleml:Rule key=":rule41" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps42">
			<ruleml:Rule key=":rule42" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps43">
			<ruleml:Rule key=":rule43" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps44">
			<ruleml:Rule key=":rule44" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps45">
			<ruleml:Rule key=":rule45" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps46">
			<ruleml:Rule key=":rule46" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps47">
			<ruleml:Rule key=":rule47" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps48">
			<ruleml:Rule key=":rule48" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps49">
			<ruleml:Rule key=":rule49" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		
		<lrml:PrescriptiveStatement key="ps50">
			<ruleml:Rule key=":rule50" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps51">
			<ruleml:Rule key=":rule51" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps52">
			<ruleml:Rule key=":rule52" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps53">
			<ruleml:Rule key=":rule53" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps54">
			<ruleml:Rule key=":rule54" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps55">
			<ruleml:Rule key=":rule55" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps56">
			<ruleml:Rule key=":rule56" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps57">
			<ruleml:Rule key=":rule57" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps58">
			<ruleml:Rule key=":rule58" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps59">
			<ruleml:Rule key=":rule59" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		
		<lrml:PrescriptiveStatement key="ps60">
			<ruleml:Rule key=":rule60" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps61">
			<ruleml:Rule key=":rule61" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps62">
			<ruleml:Rule key=":rule62" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps63">
			<ruleml:Rule key=":rule63" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps64">
			<ruleml:Rule key=":rule64" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harmful_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish" />
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">yes</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have" />
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps65">
			<ruleml:Rule key=":rule65" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_confiscation</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps66">
			<ruleml:Rule key=":rule66" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_confiscation</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement><lrml:PrescriptiveStatement key="ps67">
			<ruleml:Rule key=":rule8" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		
		<lrml:PenaltyStatement key="pen1">
			<lrml:SuborderList>
				<lrml:Obligation>
					<ruleml:Atom>
						<ruleml:Rel iri=":to_pay_min" />
						<ruleml:Var>Money</ruleml:Var>
						<ruleml:Ind>500</ruleml:Ind>
					</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen2">
			<lrml:SuborderList>
				<lrml:Obligation>
					<ruleml:Atom>
						<ruleml:Rel iri=":to_pay_max" />
						<ruleml:Var>Money</ruleml:Var>
						<ruleml:Ind>2000</ruleml:Ind>
					</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen3">
			<lrml:SuborderList>
				<lrml:Obligation>
					<ruleml:Atom>
						<ruleml:Rel iri=":max_imprisonment_months" />
						<ruleml:Var>Months</ruleml:Var>
						<ruleml:Ind>6</ruleml:Ind>
					</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen4">
			<lrml:SuborderList>
				<lrml:Obligation>
					<ruleml:Atom>
						<ruleml:Rel iri=":max_imprisonment_years" />
						<ruleml:Var>Years</ruleml:Var>
						<ruleml:Ind>3</ruleml:Ind>
					</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen5">
			<lrml:SuborderList>
				<lrml:Obligation>
					<ruleml:Atom>
						<ruleml:Rel iri=":illegal_fishing_confiscation" />
						<ruleml:Var>Defendant</ruleml:Var>
						<ruleml:Data xsi:type="xs:string">equipment</ruleml:Data>
					</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>

		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen1" />
				<lrml:toPrescriptiveStatement keyref="#ps2" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen2" />
				<lrml:toPrescriptiveStatement keyref="#ps2" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps2" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen1" />
				<lrml:toPrescriptiveStatement keyref="#ps3" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen2" />
				<lrml:toPrescriptiveStatement keyref="#ps3" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps3" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen1" />
				<lrml:toPrescriptiveStatement keyref="#ps4" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen2" />
				<lrml:toPrescriptiveStatement keyref="#ps4" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps4" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps5" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps6" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps7" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps8" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps9" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps10" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps11" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps12" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps13" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps14" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps15" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps16" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps17" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps18" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps19" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps20" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps21" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps22" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps23" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps24" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps25" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps26" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps27" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps28" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps29" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps30" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps31" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps32" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps33" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps34" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps35" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps36" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps37" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps38" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps39" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps40" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps41" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps42" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps43" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps44" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps45" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps46" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps47" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps48" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps49" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps50" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps51" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps52" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps53" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps54" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps55" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps56" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps57" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps58" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps59" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps60" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps61" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps62" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4" />
				<lrml:toPrescriptiveStatement keyref="#ps63" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3" />
				<lrml:toPrescriptiveStatement keyref="#ps64" />
			</lrml:Reparation>
		</lrml:ReparationStatement>
	</lrml:Statements>
</lrml:LegalRuleML>