<?xml version="1.0" encoding="UTF-8"?>
<lrml:LegalRuleML xmlns:lrml="http://docs.oasis-open.org/legalruleml/ns/v1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://docs.oasis-open.org/legalruleml/ns/v1.0/ xsd-compact/lrml-compact.xsd" xmlns:ruleml="http://ruleml.org/spec">
	<lrml:Statements>
		<lrml:PrescriptiveStatement key="ps1">
			<ruleml:Rule key=":rule1" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_ban_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps2">
			<ruleml:Rule key=":rule2" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_banned_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps3">
			<ruleml:Rule key=":rule3" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">explosives</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps4">
			<ruleml:Rule key=":rule4" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">electrical_current</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps5">
			<ruleml:Rule key=":rule5" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>	
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">stun_agent</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps6">
			<ruleml:Rule key=":rule6" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>	
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lcdestroys_fish:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">harm_to_reproduction</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps7">
			<ruleml:Rule key=":rule7" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">mass_destruction</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps8">
			<ruleml:Rule key=":rule8" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps9">
			<ruleml:Rule key=":rule9" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>	
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:have"/>
							<ruleml:Var type="lc:Fish">Fish</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">greater_biological_worth</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no</ruleml:Data>
						</ruleml:Atom>	
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps10">
			<ruleml:Rule key=":rule10" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_during"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_period</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:catches_in"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">hunting_regulated_waters</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:uses"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">adequate_tool</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:causes"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Data xsi:type="xs:string">no_harm</ruleml:Data>
						</ruleml:Atom>
						<ruleml:Atom>
							<ruleml:Rel iri="lc:destroys_fish"/>
							<ruleml:Var type="lc:defendant">Defendant</ruleml:Var>
							<ruleml:Var type="destroys_fish">fish_number</ruleml:Var>
						</ruleml:Atom>	
						<ruleml:Atom>
							<ruleml:Expr>
								<ruleml:Fun>&gt;</ruleml:Fun>
								<ruleml:Var>fish_number</ruleml:Var>
								<ruleml:Ind>5</ruleml:Ind>
							</ruleml:Expr>
						</ruleml:Atom>		
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Atom>
						<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
						<ruleml:Var type=":defendant">Defendant</ruleml:Var>
					</ruleml:Atom>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps11">
			<ruleml:Rule key=":rule11" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl2</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_confiscation</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		<lrml:PrescriptiveStatement key="ps12">
			<ruleml:Rule key=":rule12" closure="universal" strength="defeasible">
				<ruleml:if>
					<ruleml:And>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_lvl1</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:And>
				</ruleml:if>
				<ruleml:then>
					<ruleml:Negation>
						<ruleml:Atom>
							<ruleml:Rel>illegal_fishing_confiscation</ruleml:Rel>
							<ruleml:Var type=":defendant">Defendant</ruleml:Var>
						</ruleml:Atom>
					</ruleml:Negation>
				</ruleml:then>
			</ruleml:Rule>
		</lrml:PrescriptiveStatement>
		
		<lrml:PenaltyStatement key="pen1">
			<lrml:SuborderList>
				<lrml:Obligation>
						<ruleml:Atom>
							<ruleml:Rel iri=":to_pay_min"/>
							<ruleml:Var>Money</ruleml:Var>
							<ruleml:Ind>500</ruleml:Ind>
						</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen2">
			<lrml:SuborderList>
				<lrml:Obligation>
						<ruleml:Atom>
							<ruleml:Rel iri=":to_pay_max"/>
							<ruleml:Var>Money</ruleml:Var>
							<ruleml:Ind>2000</ruleml:Ind>
						</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen3">
			<lrml:SuborderList>
				<lrml:Obligation>
						<ruleml:Atom>
							<ruleml:Rel iri=":max_imprisonment_months"/>
							<ruleml:Var>Months</ruleml:Var>
							<ruleml:Ind>6</ruleml:Ind>
						</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:PenaltyStatement key="pen4">
			<lrml:SuborderList>
				<lrml:Obligation>
						<ruleml:Atom>
							<ruleml:Rel iri=":max_imprisonment_years"/>
							<ruleml:Var>Years</ruleml:Var>
							<ruleml:Ind>3</ruleml:Ind>
						</ruleml:Atom>
				</lrml:Obligation>
			</lrml:SuborderList>
		</lrml:PenaltyStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen1"/>
				<lrml:toPrescriptiveStatement keyref="#ps1"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen2"/>
				<lrml:toPrescriptiveStatement keyref="#ps1"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3"/>
				<lrml:toPrescriptiveStatement keyref="#ps1"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen1"/>
				<lrml:toPrescriptiveStatement keyref="#ps2"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen2"/>
				<lrml:toPrescriptiveStatement keyref="#ps2"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen3"/>
				<lrml:toPrescriptiveStatement keyref="#ps2"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps3"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps4"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps5"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps6"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps7"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps9"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:ReparationStatement>
			<lrml:Reparation>
				<lrml:appliesPenalty keyref="#pen4"/>
				<lrml:toPrescriptiveStatement keyref="#ps10"/>
			</lrml:Reparation>
		</lrml:ReparationStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps1" over="#ps2"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps2" over="#ps3"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps3" over="#ps4"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps4" over="#ps5"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps5" over="#ps6"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps6" over="#ps7"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps7" over="#ps9"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps9" over="#ps10"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps10" over="#ps11"/>
		</lrml:OverrideStatement>
		<lrml:OverrideStatement>
			<lrml:Override under="#ps1" over="#ps11"/>
		</lrml:OverrideStatement>
	</lrml:Statements>
</lrml:LegalRuleML>
